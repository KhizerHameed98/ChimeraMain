{"version":3,"file":"SquaresFour.esm.js","sources":["../../src/icons/SquaresFour.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"148\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"148\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"148\"\n            y=\"148\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect x=\"48\" y=\"48\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"144\" y=\"48\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"48\" y=\"144\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"144\" y=\"144\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <rect x=\"40\" y=\"40\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"136\" y=\"40\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"40\" y=\"136\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"136\" y=\"136\" width=\"80\" height=\"80\" rx=\"8\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst SquaresFour = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nSquaresFour.displayName = \"SquaresFour\";\n\nexport default SquaresFour;\n"],"names":["renderPathFor","weight","color","React","x","y","width","height","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","opacity","rx","console","error","SquaresFour","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","transform","undefined","displayName"],"mappings":"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"}