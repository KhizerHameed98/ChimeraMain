{"version":3,"file":"ArrowSquareDownLeft.esm.js","sources":["../../src/icons/ArrowSquareDownLeft.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <polyline\n            points=\"148 156 100 156 100 108\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"156\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <polyline\n            points=\"148 156 100 156 100 108\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"156\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M224,208V48a16.01833,16.01833,0,0,0-16-16H48A16.01833,16.01833,0,0,0,32,48V208a16.01833,16.01833,0,0,0,16,16H208A16.01833,16.01833,0,0,0,224,208ZM161.65674,105.65723,119.314,148H148a8,8,0,0,1,0,16H100c-.05981,0-.11768-.00781-.17725-.00879-.20251-.00488-.405-.01123-.60693-.03076-.13867-.01367-.27344-.03857-.41-.05908-.12171-.01856-.24366-.03174-.36451-.05567-.14636-.02881-.2882-.06884-.43151-.10547-.10938-.02783-.21949-.05175-.32789-.084-.13732-.042-.27014-.09277-.40429-.1416-.11231-.04053-.22547-.07715-.33618-.123-.12281-.05078-.24073-.11035-.36036-.167-.1173-.05566-.23559-.10742-.35058-.169-.11231-.06054-.219-.1289-.32813-.19384-.11523-.06885-.23181-.13428-.34423-.20948-.1167-.07812-.22669-.165-.339-.249-.09681-.07227-.19629-.13965-.29053-.21728-.1825-.14991-.35657-.30909-.525-.47413-.01953-.01953-.041-.03515-.0603-.05468-.01672-.01661-.03052-.03516-.04712-.05225-.168-.1709-.32959-.34766-.48169-.53271-.08007-.09766-.14966-.2002-.22436-.3003-.0813-.10888-.166-.21582-.242-.3291-.07788-.11621-.1455-.2373-.21655-.35644-.0625-.105-.12829-.207-.186-.315-.06482-.12109-.11988-.2456-.178-.36914-.05322-.11328-.10987-.22461-.158-.34033-.04956-.11963-.0896-.24219-.13318-.36377-.04468-.125-.09253-.24756-.13123-.375-.0371-.123-.06433-.24756-.09545-.37158-.03235-.12891-.06861-.25635-.09449-.38721-.02881-.145-.04614-.2915-.06677-.4375-.01587-.1123-.03747-.22265-.04858-.33642-.026-.26367-.03992-.52832-.03992-.793V108a8,8,0,0,1,16,0v28.686l42.34326-42.34327a8.00018,8.00018,0,1,1,11.31348,11.31446Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <polyline\n            points=\"148 156 100 156 100 108\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"156\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <polyline\n            points=\"148 156 100 156 100 108\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"156\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            transform=\"translate(0 256) rotate(-90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <polyline\n            points=\"148 156 100 156 100 108\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"156\"\n            y1=\"100\"\n            x2=\"100\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowSquareDownLeft = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => {\n    const { color, size, weight, mirrored, children, ...restProps } = props;\n    const {\n      color: contextColor,\n      size: contextSize,\n      weight: contextWeight,\n      mirrored: contextMirrored,\n      ...restContext\n    } = useContext(IconContext);\n\n    return (\n      <svg\n        ref={ref}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size ?? contextSize}\n        height={size ?? contextSize}\n        fill={color ?? contextColor}\n        viewBox=\"0 0 256 256\"\n        transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n        {...restContext}\n        {...restProps}\n      >\n        {children}\n        <rect width=\"256\" height=\"256\" fill=\"none\" />\n        {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n      </svg>\n    );\n  }\n);\n\nArrowSquareDownLeft.displayName = \"ArrowSquareDownLeft\";\n\nexport default ArrowSquareDownLeft;\n"],"names":["renderPathFor","weight","color","React","x","y","width","height","rx","transform","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","points","x1","y1","x2","y2","opacity","d","console","error","ArrowSquareDownLeft","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","undefined","displayName"],"mappings":"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"}