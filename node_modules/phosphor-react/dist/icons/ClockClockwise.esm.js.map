{"version":3,"file":"ClockClockwise.esm.js","sources":["../../src/icons/ClockClockwise.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"80\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"169.56922\"\n            y1=\"152\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"184.167 99.716 224.167 99.716 224.167 59.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,1,1,0-124.4508l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <circle cx=\"128\" cy=\"128\" r=\"88\" opacity=\"0.2\" />\n          <line\n            x1=\"128\"\n            y1=\"80\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"169.56922\"\n            y1=\"152\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"184.167 99.716 224.167 99.716 224.167 59.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,1,1,0-124.4508l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M128,72a8.00008,8.00008,0,0,0-8,8v48c0,.07269.00879.14313.01074.21533.00488.16107.01026.32172.02442.48187.01074.124.02734.24573.04394.368.01758.12957.03516.25872.05908.38714.02588.142.05811.28156.09131.42084.02637.108.05274.2157.083.32257.0415.14606.08838.28943.13818.432.03516.10131.07129.20208.11036.30194.05419.13665.1123.27063.17333.4035.04834.1062.09864.21143.15186.31561.06055.11792.12451.2334.19043.34778.06641.11511.13477.22864.207.34058.063.09771.12891.19317.19629.2879.085.12.17236.23792.26416.35352.06641.08294.13477.16351.2041.24377.09961.11548.20117.22882.30811.339.07617.07849.15478.15381.23388.22913.105.09991.21094.19854.32276.29333.09765.0835.19922.16235.30127.24115.09912.07642.19775.153.30127.22534.12988.09131.26513.17548.40088.2591.0625.03839.11963.082.18359.11889l41.56934,24a8,8,0,0,0,8-13.85644L136,123.38116V80A8.00008,8.00008,0,0,0,128,72Z\" />\n            <path d=\"M224.1665,51.71582a7.99977,7.99977,0,0,0-8,8V80.4021L195.88184,60.11768a95.9551,95.9551,0,1,0,0,135.76464,7.99983,7.99983,0,1,0-11.31348-11.31347,80.00009,80.00009,0,1,1,0-113.1377L204.853,91.71582H184.1665a8,8,0,0,0,0,16h39.99756c.26465.00006.5293-.01392.793-.03992.11377-.01111.22363-.03265.33594-.04846.14648-.02069.293-.038.438-.06683.13134-.02606.25879-.06238.38818-.09479.12354-.03107.24805-.05817.37012-.09521.12842-.03888.25195-.087.37744-.132.1206-.04328.24219-.08307.36133-.13233.11816-.04889.231-.10626.34619-.16052.12109-.05725.24365-.11121.36279-.17493.11182-.06.21826-.12823.32715-.19329.11475-.06873.231-.13355.34326-.20856.12207-.08179.23731-.17267.35449-.2608.09131-.06861.18555-.13184.27442-.2049a8.05625,8.05625,0,0,0,1.11767-1.1181c.07178-.0871.13379-.17908.20069-.26844.08984-.1192.18213-.23632.26562-.36059.07373-.11041.1377-.2251.20508-.33826.06641-.11035.13574-.21844.19629-.33215.0625-.11676.11523-.23682.17187-.3559.05567-.11767.11426-.23346.16407-.35418.04785-.1153.08593-.233.12793-.34992.04687-.129.09619-.25659.13623-.38867.03564-.11786.06152-.23755.09131-.35657.03418-.13367.07128-.26575.09863-.402.02734-.13769.043-.27679.06348-.41552.01709-.11957.03955-.23725.05126-.35846.02588-.26227.04-.52539.04-.7887v-40A7.99977,7.99977,0,0,0,224.1665,51.71582Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"80\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"169.56922\"\n            y1=\"152\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"184.167 99.716 224.167 99.716 224.167 59.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,1,1,0-124.4508l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"80\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"169.56922\"\n            y1=\"152\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"184.167 99.716 224.167 99.716 224.167 59.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,1,1,0-124.4508l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"80\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"169.56922\"\n            y1=\"152\"\n            x2=\"128\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"184.167 99.716 224.167 99.716 224.167 59.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,1,1,0-124.4508l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ClockClockwise = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nClockClockwise.displayName = \"ClockClockwise\";\n\nexport default ClockClockwise;\n"],"names":["renderPathFor","weight","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","d","cx","cy","r","opacity","console","error","ClockClockwise","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","width","height","viewBox","transform","undefined","displayName"],"mappings":"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"}