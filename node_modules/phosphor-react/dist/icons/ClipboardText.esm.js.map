{"version":3,"file":"ClipboardText.esm.js","sources":["../../src/icons/ClipboardText.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"88\"\n            y=\"24\"\n            width=\"80\"\n            height=\"40\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M168,40h32a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"156\"\n            x2=\"160\"\n            y2=\"156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"116\"\n            x2=\"160\"\n            y2=\"116\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <path\n            d=\"M88,40H56a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H200a8,8,0,0,0,8-8V48a8,8,0,0,0-8-8H168V64H88Z\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"88\"\n            y=\"24\"\n            width=\"80\"\n            height=\"40\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M168,40h32a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"152\"\n            x2=\"160\"\n            y2=\"152\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"120\"\n            x2=\"160\"\n            y2=\"120\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M200,32H176V24a8.00039,8.00039,0,0,0-8-8H88a8.00039,8.00039,0,0,0-8,8v8H56A16.01833,16.01833,0,0,0,40,48V216a16.01833,16.01833,0,0,0,16,16H200a16.01833,16.01833,0,0,0,16-16V48A16.01833,16.01833,0,0,0,200,32ZM96,32h64V56H96Zm64,128H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Zm0-32H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"88\"\n            y=\"24\"\n            width=\"80\"\n            height=\"40\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M168,40h32a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"152\"\n            x2=\"160\"\n            y2=\"152\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"120\"\n            x2=\"160\"\n            y2=\"120\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"88\"\n            y=\"24\"\n            width=\"80\"\n            height=\"40\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M168,40h32a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"152\"\n            x2=\"160\"\n            y2=\"152\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"120\"\n            x2=\"160\"\n            y2=\"120\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"88\"\n            y=\"24\"\n            width=\"80\"\n            height=\"40\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M168,40h32a8,8,0,0,1,8,8V216a8,8,0,0,1-8,8H56a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"152\"\n            x2=\"160\"\n            y2=\"152\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"120\"\n            x2=\"160\"\n            y2=\"120\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ClipboardText = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nClipboardText.displayName = \"ClipboardText\";\n\nexport default ClipboardText;\n"],"names":["renderPathFor","weight","color","React","x","y","width","height","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","d","x1","y1","x2","y2","opacity","console","error","ClipboardText","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","transform","undefined","displayName"],"mappings":";;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,MADoB,EAEpBC,KAFoB;AAIpB,UAAQD,MAAR;AACE,SAAK,MAAL;AACE,aACEE,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,CAAC,EAAC;AACFC,QAAAA,CAAC,EAAC;AACFC,QAAAA,KAAK,EAAC;AACNC,QAAAA,MAAM,EAAC;AACPC,QAAAA,WAAW,EAAC;AACZC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,IAAI,EAAC;OATP,CADF,EAYET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFD,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OANd,CAZF,EAoBEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CApBF,EA+BEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CA/BF,CADF;;AA6CF,SAAK,SAAL;AACE,aACEL,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFK,QAAAA,OAAO,EAAC;OAFV,CADF,EAKEf,mBAAA,OAAA;AACEC,QAAAA,CAAC,EAAC;AACFC,QAAAA,CAAC,EAAC;AACFC,QAAAA,KAAK,EAAC;AACNC,QAAAA,MAAM,EAAC;AACPC,QAAAA,WAAW,EAAC;AACZC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,IAAI,EAAC;OATP,CALF,EAgBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFD,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OANd,CAhBF,EAwBEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CAxBF,EAmCEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CAnCF,CADF;;AAiDF,SAAK,MAAL;AACE,aACEL,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AAAMU,QAAAA,CAAC,EAAC;OAAR,CADF,CADF;;AAKF,SAAK,OAAL;AACE,aACEV,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,CAAC,EAAC;AACFC,QAAAA,CAAC,EAAC;AACFC,QAAAA,KAAK,EAAC;AACNC,QAAAA,MAAM,EAAC;AACPC,QAAAA,WAAW,EAAC;AACZC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,IAAI,EAAC;OATP,CADF,EAYET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFD,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OANd,CAZF,EAoBEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CApBF,EA+BEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CA/BF,CADF;;AA6CF,SAAK,MAAL;AACE,aACEL,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,CAAC,EAAC;AACFC,QAAAA,CAAC,EAAC;AACFC,QAAAA,KAAK,EAAC;AACNC,QAAAA,MAAM,EAAC;AACPC,QAAAA,WAAW,EAAC;AACZC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,IAAI,EAAC;OATP,CADF,EAYET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFD,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OANd,CAZF,EAoBEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CApBF,EA+BEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CA/BF,CADF;;AA6CF,SAAK,SAAL;AACE,aACEL,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,CAAC,EAAC;AACFC,QAAAA,CAAC,EAAC;AACFC,QAAAA,KAAK,EAAC;AACNC,QAAAA,MAAM,EAAC;AACPC,QAAAA,WAAW,EAAC;AACZC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,IAAI,EAAC;OATP,CADF,EAYET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFD,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OANd,CAZF,EAoBEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CApBF,EA+BEL,mBAAA,OAAA;AACEW,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHL,QAAAA,IAAI,EAAC;AACLH,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfH,QAAAA,WAAW,EAAC;OATd,CA/BF,CADF;;AA6CF;AACEW,MAAAA,OAAO,CAACC,KAAR,CACE,gGADF;AAGA,aAAO,IAAP;AArPJ;AAuPD,CA3PD;;AA6PA,IAAMC,aAAa,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;MACjDtB,QAA0DqB,MAA1DrB;MAAOuB,OAAmDF,MAAnDE;MAAMxB,SAA6CsB,MAA7CtB;MAAQyB,WAAqCH,MAArCG;MAAUC,WAA2BJ,MAA3BI;MAAaC,0CAAcL;;oBAO9DM,UAAU,CAACC,WAAD;MALLC,2BAAP7B;MACM8B,0BAANP;MACQQ,4BAARhC;MACUiC,8BAAVR;MACGS;;AAGL,SACEhC,mBAAA,MAAA;AACEqB,IAAAA,GAAG,EAAEA;AACLY,IAAAA,KAAK,EAAC;AACN9B,IAAAA,KAAK,EAAEmB,IAAF,WAAEA,IAAF,GAAUO;AACfzB,IAAAA,MAAM,EAAEkB,IAAF,WAAEA,IAAF,GAAUO;AAChBpB,IAAAA,IAAI,EAAEV,KAAF,WAAEA,KAAF,GAAW6B;AACfM,IAAAA,OAAO,EAAC;AACRC,IAAAA,SAAS,EAAEZ,QAAQ,IAAIQ,eAAZ,GAA8B,cAA9B,GAA+CK;KACtDJ,aACAP,UATN,EAWGD,QAXH,EAYExB,mBAAA,OAAA;AAAMG,IAAAA,KAAK,EAAC;AAAMC,IAAAA,MAAM,EAAC;AAAMK,IAAAA,IAAI,EAAC;GAApC,CAZF,EAaGZ,aAAa,CAACC,MAAD,WAACA,MAAD,GAAWgC,aAAX,EAA0B/B,KAA1B,WAA0BA,KAA1B,GAAmC6B,YAAnC,CAbhB,CADF;AAiBD,CA3B+B,CAAhC;AA6BAV,aAAa,CAACmB,WAAd,GAA4B,eAA5B;;;;"}