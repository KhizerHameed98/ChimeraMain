import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("polygon", {
        points: "120 128.003 184 176.003 120 224.003 120 128.003",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "56",
        y1: "80.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "56",
        y1: "176.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "232",
        y1: "56",
        x2: "184",
        y2: "104",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "232",
        y1: "104",
        x2: "184",
        y2: "56",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("polyline", {
        points: "144.406 109.698 120 128.003 120 32.003 144.405 50.307",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("polygon", {
        points: "119.971 32.003 183.971 80.003 119.971 128.003 119.971 32.003",
        opacity: "0.2"
      }), React.createElement("polygon", {
        points: "119.971 128 183.971 176 119.971 224 119.971 128",
        opacity: "0.2"
      }), React.createElement("polygon", {
        points: "120 128.003 184 176.003 120 224.003 120 128.003",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "56",
        y1: "80.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "56",
        y1: "176.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "232",
        y1: "56",
        x2: "184",
        y2: "104",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "232",
        y1: "104",
        x2: "184",
        y2: "56",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("polyline", {
        points: "152 104.002 120 128.003 120 32.003 151.999 56.002",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("g", null, React.createElement("path", {
        d: "M188.7998,169.60254,133.333,128.00244l23.46679-17.6001a7.9998,7.9998,0,1,0-9.59961-12.7998L128,112.00244v-64l19.19922,14.39893a7.99981,7.99981,0,0,0,9.59961-12.79981l-31.999-23.999A8,8,0,0,0,112,32.00244v80.00025L60.7998,73.60254a7.9998,7.9998,0,0,0-9.59961,12.7998l55.4668,41.6001-55.4668,41.6001a7.9998,7.9998,0,1,0,9.59961,12.7998L112,144.0022v80.00024a7.99975,7.99975,0,0,0,12.7998,6.3999l64-48a7.9995,7.9995,0,0,0,0-12.7998ZM128,208.00244v-64l42.6665,32Z"
      }), React.createElement("path", {
        d: "M219.31348,80l18.34326-18.34326a7.99984,7.99984,0,0,0-11.31348-11.31348L208,68.68652,189.65674,50.34326a7.99984,7.99984,0,0,0-11.31348,11.31348L196.68652,80,178.34326,98.34326a7.99984,7.99984,0,1,0,11.31348,11.31348L208,91.31348l18.34326,18.34326a7.99984,7.99984,0,1,0,11.31348-11.31348Z"
      })));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("polygon", {
        points: "120 128.003 184 176.003 120 224.003 120 128.003",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "56",
        y1: "80.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "56",
        y1: "176.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "232",
        y1: "56",
        x2: "184",
        y2: "104",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "232",
        y1: "104",
        x2: "184",
        y2: "56",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("polyline", {
        points: "152 104.002 120 128.003 120 32.003 151.999 56.002",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("polygon", {
        points: "120 128.003 184 176.003 120 224.003 120 128.003",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "56",
        y1: "80.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "56",
        y1: "176.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "232",
        y1: "56",
        x2: "184",
        y2: "104",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "232",
        y1: "104",
        x2: "184",
        y2: "56",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("polyline", {
        points: "152 104.002 120 128.003 120 32.003 151.999 56.002",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("polygon", {
        points: "120 128.003 184 176.003 120 224.003 120 128.003",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "56",
        y1: "80.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "56",
        y1: "176.00256",
        x2: "120",
        y2: "128.00256",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "232",
        y1: "56",
        x2: "184",
        y2: "104",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "232",
        y1: "104",
        x2: "184",
        y2: "56",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("polyline", {
        points: "152 104.002 120 128.003 120 32.003 151.999 56.002",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var BluetoothX = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
BluetoothX.displayName = "BluetoothX";

export default BluetoothX;
//# sourceMappingURL=BluetoothX.esm.js.map
