{"version":3,"file":"ComputerTower.esm.js","sources":["../../src/icons/ComputerTower.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"160\"\n            y1=\"76\"\n            x2=\"96\"\n            y2=\"76\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"116\"\n            x2=\"96\"\n            y2=\"116\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <circle cx=\"128\" cy=\"184\" r=\"16\" />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            opacity=\"0.2\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"72\"\n            x2=\"96\"\n            y2=\"72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"104\"\n            x2=\"96\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <circle cx=\"128\" cy=\"180\" r=\"12\" />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M192,24H64A16.01833,16.01833,0,0,0,48,40V216a16.01833,16.01833,0,0,0,16,16H192a16.01833,16.01833,0,0,0,16-16V40A16.01833,16.01833,0,0,0,192,24ZM128,192a12,12,0,1,1,12-12A12.01343,12.01343,0,0,1,128,192Zm32-80H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Zm0-32H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"160\"\n            y1=\"72\"\n            x2=\"96\"\n            y2=\"72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"104\"\n            x2=\"96\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <circle cx=\"128\" cy=\"180\" r=\"10\" />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"160\"\n            y1=\"72\"\n            x2=\"96\"\n            y2=\"72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"104\"\n            x2=\"96\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <circle cx=\"128\" cy=\"180\" r=\"8\" />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"160\"\n            y1=\"72\"\n            x2=\"96\"\n            y2=\"72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"104\"\n            x2=\"96\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"32\"\n            y=\"56\"\n            width=\"192\"\n            height=\"144\"\n            rx=\"8\"\n            transform=\"translate(256 0) rotate(90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <circle cx=\"128\" cy=\"180\" r=\"12\" />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ComputerTower = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nComputerTower.displayName = \"ComputerTower\";\n\nexport default ComputerTower;\n"],"names":["renderPathFor","weight","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","transform","cx","cy","r","opacity","d","console","error","ComputerTower","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","undefined","displayName"],"mappings":"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"}