{"version":3,"file":"PhoneDisconnect.esm.js","sources":["../../src/icons/PhoneDisconnect.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"200\"\n            x2=\"216\"\n            y2=\"200\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            opacity=\"0.2\"\n          />\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"200\"\n            x2=\"216\"\n            y2=\"200\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M229.82422,90.17578c-56.14551-56.14355-147.501-56.14648-203.64844.001a56.07211,56.07211,0,0,0-4.69043,73.87695,16.03254,16.03254,0,0,0,18.55078,4.99707L87.35059,150.125a15.94917,15.94917,0,0,0,9.74609-11.71875l5.90527-29.51172a76.51611,76.51611,0,0,1,49.67676-.10937v.00195l6.21094,29.73828a15.963,15.963,0,0,0,9.7207,11.584l47.35254,18.9414a16.03618,16.03618,0,0,0,18.55273-4.99805A56.07343,56.07343,0,0,0,229.82422,90.17578Z\" />\n            <path d=\"M216,192H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"200\"\n            x2=\"216\"\n            y2=\"200\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"200\"\n            x2=\"216\"\n            y2=\"200\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <path\n            d=\"M155.371,101.25063a84.3478,84.3478,0,0,0-55.10429.12547,7.92755,7.92755,0,0,0-5.1169,5.95455l-5.89824,29.5076a8,8,0,0,1-4.87369,5.85972L37.06532,161.623a7.97345,7.97345,0,0,1-9.2595-2.47378,48.00881,48.00881,0,0,1,4.02766-63.31573,136,136,0,0,1,192.333,0,48.00881,48.00881,0,0,1,4.02766,63.31573,7.97345,7.97345,0,0,1-9.2595,2.47378l-47.35377-18.94151a8,8,0,0,1-4.85991-5.79231L160.51024,107.151A7.9287,7.9287,0,0,0,155.371,101.25063Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"200\"\n            x2=\"216\"\n            y2=\"200\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst PhoneDisconnect = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nPhoneDisconnect.displayName = \"PhoneDisconnect\";\n\nexport default PhoneDisconnect;\n"],"names":["renderPathFor","weight","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","console","error","PhoneDisconnect","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","width","height","viewBox","transform","undefined","displayName"],"mappings":"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"}