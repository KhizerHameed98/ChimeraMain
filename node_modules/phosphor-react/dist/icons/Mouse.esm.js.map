{"version":3,"file":"Mouse.esm.js","sources":["../../src/icons/Mouse.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"52\"\n            y=\"24\"\n            width=\"152\"\n            height=\"208\"\n            rx=\"56\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"52\"\n            y1=\"104\"\n            x2=\"204\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"104\"\n            x2=\"128.00007\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <path\n            d=\"M128,104l.00007-80H108A56,56,0,0,0,52,80v24Z\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"52\"\n            y=\"24\"\n            width=\"152\"\n            height=\"208\"\n            rx=\"56\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"52\"\n            y1=\"104\"\n            x2=\"204\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"104\"\n            x2=\"128.00007\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M148,16H108A64.07239,64.07239,0,0,0,44,80v96a64.07239,64.07239,0,0,0,64,64h40a64.07239,64.07239,0,0,0,64-64V80A64.07239,64.07239,0,0,0,148,16Zm48,64V96H136V32h12A48.05468,48.05468,0,0,1,196,80ZM108,32h12V96H60V80A48.05468,48.05468,0,0,1,108,32Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"52\"\n            y=\"24\"\n            width=\"152\"\n            height=\"208\"\n            rx=\"56\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"52\"\n            y1=\"104\"\n            x2=\"204\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"104\"\n            x2=\"128.00007\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"52\"\n            y=\"24\"\n            width=\"152\"\n            height=\"208\"\n            rx=\"56\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"52\"\n            y1=\"104\"\n            x2=\"204\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"104\"\n            x2=\"128.00007\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"52\"\n            y=\"24\"\n            width=\"152\"\n            height=\"208\"\n            rx=\"56\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"52\"\n            y1=\"104\"\n            x2=\"204\"\n            y2=\"104\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"104\"\n            x2=\"128.00007\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst Mouse = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nMouse.displayName = \"Mouse\";\n\nexport default Mouse;\n"],"names":["renderPathFor","weight","color","React","x","y","width","height","rx","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","x1","y1","x2","y2","d","opacity","console","error","Mouse","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","transform","undefined","displayName"],"mappings":"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"}