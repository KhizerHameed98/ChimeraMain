{"version":3,"file":"Divide.esm.js","sources":["../../src/icons/Divide.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"40\"\n            y1=\"128\"\n            x2=\"216\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <circle cx=\"128\" cy=\"64\" r=\"20\" />\n          <circle cx=\"128\" cy=\"192\" r=\"20\" />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <line\n            x1=\"40\"\n            y1=\"128\"\n            x2=\"216\"\n            y2=\"128\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <circle cx=\"128\" cy=\"64\" r=\"16\" />\n          <circle cx=\"128\" cy=\"192\" r=\"16\" />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M224,128a8.00008,8.00008,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8.00008,8.00008,0,0,1,224,128ZM128,80a16,16,0,1,0-16-16A16.01833,16.01833,0,0,0,128,80Zm0,96a16,16,0,1,0,16,16A16.01833,16.01833,0,0,0,128,176Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"40\"\n            y1=\"128\"\n            x2=\"216\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <circle cx=\"128\" cy=\"64\" r=\"14\" />\n          <circle cx=\"128\" cy=\"192\" r=\"14\" />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"40\"\n            y1=\"128\"\n            x2=\"216\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <circle cx=\"128\" cy=\"64\" r=\"12\" />\n          <circle cx=\"128\" cy=\"192\" r=\"12\" />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"40\"\n            y1=\"128\"\n            x2=\"216\"\n            y2=\"128\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <circle cx=\"128\" cy=\"64\" r=\"16\" />\n          <circle cx=\"128\" cy=\"192\" r=\"16\" />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst Divide = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nDivide.displayName = \"Divide\";\n\nexport default Divide;\n"],"names":["renderPathFor","weight","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","cx","cy","r","d","console","error","Divide","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","width","height","viewBox","transform","undefined","displayName"],"mappings":"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"}