{"version":3,"file":"UserPlus.esm.js","sources":["../../src/icons/UserPlus.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"176\"\n            y1=\"56\"\n            x2=\"224\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"200\"\n            y1=\"32\"\n            x2=\"200\"\n            y2=\"80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M188.05124,118.18275a63.96647,63.96647,0,1,1-45.27249-84.46794\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <circle cx=\"128\" cy=\"96\" r=\"64\" opacity=\"0.2\" />\n          <line\n            x1=\"176\"\n            y1=\"56\"\n            x2=\"224\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"200\"\n            y1=\"32\"\n            x2=\"200\"\n            y2=\"80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M188.05124,118.18275a63.96647,63.96647,0,1,1-45.27249-84.46794\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M176,64h16V80a8,8,0,0,0,16,0V64h16a8,8,0,0,0,0-16H208V32a8,8,0,0,0-16,0V48H176a8,8,0,0,0,0,16Z\" />\n            <path d=\"M231.93652,211.98633a120.48718,120.48718,0,0,0-67.12-54.14258,72.111,72.111,0,0,0,34.73474-53.85516A24.02341,24.02341,0,0,1,176,80a23.99523,23.99523,0,0,1-10.62024-45.51459A71.97718,71.97718,0,1,0,91.18359,157.84375a120.48811,120.48811,0,0,0-67.11865,54.14063,7.99981,7.99981,0,0,0,6.92432,12.00634l194.023.002a7.99957,7.99957,0,0,0,6.92431-12.00635Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"176\"\n            y1=\"56\"\n            x2=\"224\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"200\"\n            y1=\"32\"\n            x2=\"200\"\n            y2=\"80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M188.05124,118.18275a63.96647,63.96647,0,1,1-45.27249-84.46794\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"176\"\n            y1=\"56\"\n            x2=\"224\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"200\"\n            y1=\"32\"\n            x2=\"200\"\n            y2=\"80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M188.05124,118.18275a63.96647,63.96647,0,1,1-45.27249-84.46794\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"176\"\n            y1=\"56\"\n            x2=\"224\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"200\"\n            y1=\"32\"\n            x2=\"200\"\n            y2=\"80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M30.989,215.99064a112.03731,112.03731,0,0,1,194.02311.002\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M188.05124,118.18275a63.96647,63.96647,0,1,1-45.27249-84.46794\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst UserPlus = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nUserPlus.displayName = \"UserPlus\";\n\nexport default UserPlus;\n"],"names":["renderPathFor","weight","color","React","x1","y1","x2","y2","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","cx","cy","r","opacity","console","error","UserPlus","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","width","height","viewBox","transform","undefined","displayName"],"mappings":";;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,MADoB,EAEpBC,KAFoB;AAIpB,UAAQD,MAAR;AACE,SAAK,MAAL;AACE,aACEE,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CADF,EAYET,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAZF,EAuBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAvBF,EA+BET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CA/BF,CADF;;AA0CF,SAAK,SAAL;AACE,aACET,mBAAA,eAAA,MAAA,EACEA,mBAAA,SAAA;AAAQW,QAAAA,EAAE,EAAC;AAAMC,QAAAA,EAAE,EAAC;AAAKC,QAAAA,CAAC,EAAC;AAAKC,QAAAA,OAAO,EAAC;OAAxC,CADF,EAEEd,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAFF,EAaET,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAbF,EAwBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAxBF,EAgCET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAhCF,CADF;;AA2CF,SAAK,MAAL;AACE,aACET,mBAAA,eAAA,MAAA,EACEA,mBAAA,IAAA,MAAA,EACEA,mBAAA,OAAA;AAAMU,QAAAA,CAAC,EAAC;OAAR,CADF,EAEEV,mBAAA,OAAA;AAAMU,QAAAA,CAAC,EAAC;OAAR,CAFF,CADF,CADF;;AAQF,SAAK,OAAL;AACE,aACEV,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CADF,EAYET,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAZF,EAuBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAvBF,EA+BET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CA/BF,CADF;;AA0CF,SAAK,MAAL;AACE,aACET,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CADF,EAYET,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAZF,EAuBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAvBF,EA+BET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CA/BF,CADF;;AA0CF,SAAK,SAAL;AACE,aACET,mBAAA,eAAA,MAAA,EACEA,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CADF,EAYET,mBAAA,OAAA;AACEC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,EAAE,EAAC;AACHC,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OATd,CAZF,EAuBET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CAvBF,EA+BET,mBAAA,OAAA;AACEU,QAAAA,CAAC,EAAC;AACFL,QAAAA,IAAI,EAAC;AACLC,QAAAA,MAAM,EAAEP;AACRQ,QAAAA,aAAa,EAAC;AACdC,QAAAA,cAAc,EAAC;AACfC,QAAAA,WAAW,EAAC;OANd,CA/BF,CADF;;AA0CF;AACEM,MAAAA,OAAO,CAACC,KAAR,CACE,gGADF;AAGA,aAAO,IAAP;AAtOJ;AAwOD,CA5OD;;AA8OA,IAAMC,QAAQ,gBAAGC,UAAU,CAA2B,UAACC,KAAD,EAAQC,GAAR;MAC5CrB,QAA0DoB,MAA1DpB;MAAOsB,OAAmDF,MAAnDE;MAAMvB,SAA6CqB,MAA7CrB;MAAQwB,WAAqCH,MAArCG;MAAUC,WAA2BJ,MAA3BI;MAAaC,0CAAcL;;oBAO9DM,UAAU,CAACC,WAAD;MALLC,2BAAP5B;MACM6B,0BAANP;MACQQ,4BAAR/B;MACUgC,8BAAVR;MACGS;;AAGL,SACE/B,mBAAA,MAAA;AACEoB,IAAAA,GAAG,EAAEA;AACLY,IAAAA,KAAK,EAAC;AACNC,IAAAA,KAAK,EAAEZ,IAAF,WAAEA,IAAF,GAAUO;AACfM,IAAAA,MAAM,EAAEb,IAAF,WAAEA,IAAF,GAAUO;AAChBvB,IAAAA,IAAI,EAAEN,KAAF,WAAEA,KAAF,GAAW4B;AACfQ,IAAAA,OAAO,EAAC;AACRC,IAAAA,SAAS,EAAEd,QAAQ,IAAIQ,eAAZ,GAA8B,cAA9B,GAA+CO;KACtDN,aACAP,UATN,EAWGD,QAXH,EAYEvB,mBAAA,OAAA;AAAMiC,IAAAA,KAAK,EAAC;AAAMC,IAAAA,MAAM,EAAC;AAAM7B,IAAAA,IAAI,EAAC;GAApC,CAZF,EAaGR,aAAa,CAACC,MAAD,WAACA,MAAD,GAAW+B,aAAX,EAA0B9B,KAA1B,WAA0BA,KAA1B,GAAmC4B,YAAnC,CAbhB,CADF;AAiBD,CA3B0B,CAA3B;AA6BAV,QAAQ,CAACqB,WAAT,GAAuB,UAAvB;;;;"}