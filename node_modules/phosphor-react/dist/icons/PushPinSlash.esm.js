import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "192",
        x2: "128",
        y2: "240",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M72.5038,66.95418,64.56129,146.3615a7.99543,7.99543,0,0,1-3.41653,5.8483,48.03616,48.03616,0,0,0-20.16512,30.0948A8.0279,8.0279,0,0,0,48.804,192H186.18182",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "33.5",
        y1: "24",
        x2: "222.5",
        y2: "232",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M190.53671,137.3435l-9.81617-98.13971A8,8,0,0,0,172.76026,32H94.81593",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M215.02036,182.3046a48.03614,48.03614,0,0,0-20.16513-30.0948,7.99547,7.99547,0,0,1-3.41652-5.8483L180.72054,39.20379A8,8,0,0,0,172.76026,32H83.23974a8,8,0,0,0-7.96028,7.20379L64.56129,146.3615a7.99547,7.99547,0,0,1-3.41652,5.8483,48.03614,48.03614,0,0,0-20.16513,30.0948A8.0279,8.0279,0,0,0,48.804,192H207.196A8.0279,8.0279,0,0,0,215.02036,182.3046Z",
        opacity: "0.2"
      }), React.createElement("line", {
        x1: "128",
        y1: "192",
        x2: "128",
        y2: "240",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M191.83532,150.32672,180.72054,39.20379A8,8,0,0,0,172.76026,32H83.974",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M72.5038,66.95418,64.56129,146.3615a7.99543,7.99543,0,0,1-3.41653,5.8483,48.03616,48.03616,0,0,0-20.16512,30.0948A8.0279,8.0279,0,0,0,48.804,192H186.18182",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "33.5",
        y1: "24",
        x2: "222.5",
        y2: "232",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("g", null, React.createElement("path", {
        d: "M185.92285,155.71582a7.99995,7.99995,0,0,0,13.87256-6.18555L188.68066,38.40771A15.94952,15.94952,0,0,0,172.76025,24H83.97412a8.00035,8.00035,0,0,0-5.9126,13.38965Z"
      }), React.createElement("path", {
        d: "M228.4209,226.62012l-35.99317-39.61133a8.0598,8.0598,0,0,0-.67822-.74707L39.4209,18.62012A8,8,0,0,0,27.5791,29.37988L64.19189,69.67383l-7.59082,75.8916a.32987.32987,0,0,1-.01416.06934,55.69488,55.69488,0,0,0-23.44433,35.0625A16.02766,16.02766,0,0,0,48.80371,200H120v40a8,8,0,0,0,16,0V200h46.61377l33.96533,37.37988a8,8,0,0,0,11.8418-10.75976Z"
      })));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "192",
        x2: "128",
        y2: "240",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M191.83532,150.32672,180.72054,39.20379A8,8,0,0,0,172.76026,32H83.974",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M72.5038,66.95418,64.56129,146.3615a7.99543,7.99543,0,0,1-3.41653,5.8483,48.03616,48.03616,0,0,0-20.16512,30.0948A8.0279,8.0279,0,0,0,48.804,192H186.18182",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "33.5",
        y1: "24",
        x2: "222.5",
        y2: "232",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "192",
        x2: "128",
        y2: "240",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M191.83532,150.32672,180.72054,39.20379A8,8,0,0,0,172.76026,32H83.974",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M72.5038,66.95418,64.56129,146.3615a7.99543,7.99543,0,0,1-3.41653,5.8483,48.03616,48.03616,0,0,0-20.16512,30.0948A8.0279,8.0279,0,0,0,48.804,192H186.18182",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "33.5",
        y1: "24",
        x2: "222.5",
        y2: "232",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "192",
        x2: "128",
        y2: "240",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M191.83532,150.32672,180.72054,39.20379A8,8,0,0,0,172.76026,32H83.974",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M72.5038,66.95418,64.56129,146.3615a7.99543,7.99543,0,0,1-3.41653,5.8483,48.03616,48.03616,0,0,0-20.16512,30.0948A8.0279,8.0279,0,0,0,48.804,192H186.18182",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "33.5",
        y1: "24",
        x2: "222.5",
        y2: "232",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var PushPinSlash = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
PushPinSlash.displayName = "PushPinSlash";

export default PushPinSlash;
//# sourceMappingURL=PushPinSlash.esm.js.map
