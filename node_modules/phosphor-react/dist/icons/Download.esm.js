import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "24",
        x2: "128",
        y2: "128",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("polyline", {
        points: "80 80 128 128 176 80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M184.56836,128H224a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H71.43164",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("circle", {
        cx: "188",
        cy: "168",
        r: "16"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("rect", {
        x: "24",
        y: "128",
        width: "208",
        height: "80",
        rx: "8",
        opacity: "0.2"
      }), React.createElement("path", {
        d: "M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "128",
        y1: "24",
        x2: "128",
        y2: "128",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("polyline", {
        points: "80 80 128 128 176 80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("circle", {
        cx: "188",
        cy: "168",
        r: "12"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("g", null, React.createElement("path", {
        d: "M122.34326,133.65723c.02588.02588.05469.04785.08106.07324.16211.15771.32861.31152.50341.45508.09766.08008.20118.15039.30176.22558.1084.08106.21485.165.32764.24073.11621.07812.2373.1455.35693.21679.10449.0625.20655.12793.31446.18555.12011.06445.24414.11914.36669.17676.11426.0542.22657.11084.34327.15967.11816.04882.23925.08837.35937.13134.126.04541.251.09375.37988.13282.11963.03613.24122.063.36231.09326.13184.0332.26269.07031.397.09716.13965.02735.28028.04395.42041.064.11817.01709.23389.03906.353.05078.26269.02588.52588.04.78955.04s.52686-.01416.78955-.04c.11914-.01172.23486-.03369.353-.05078.14013-.02.28076-.03662.42041-.064.13428-.02685.26513-.064.397-.09716.12109-.03028.24268-.05713.36231-.09326.1289-.03907.2539-.08741.37988-.13282.12012-.043.24121-.08252.35937-.13134.1167-.04883.229-.10547.34327-.15967.12255-.05762.24658-.11231.36669-.17676.10791-.05762.21-.12305.31446-.18555.11963-.07129.24072-.13867.35693-.21679.11279-.07569.21924-.15967.32764-.24073.10058-.07519.2041-.1455.30176-.22558.17822-.14649.34765-.30225.51269-.46338.023-.023.04883-.042.07178-.06494l48-48a8.00018,8.00018,0,1,0-11.31348-11.31446L136,108.68652V24a8,8,0,0,0-16,0v84.68652L85.65674,74.34277A8.00018,8.00018,0,0,0,74.34326,85.65723Z"
      }), React.createElement("path", {
        d: "M224,120H169.94141L144.9707,144.9707a24.00066,24.00066,0,0,1-33.9414,0L86.05859,120H32a16.01833,16.01833,0,0,0-16,16v64a16.01833,16.01833,0,0,0,16,16H224a16.01833,16.01833,0,0,0,16-16V136A16.01833,16.01833,0,0,0,224,120Zm-35.99951,60a12,12,0,1,1,12-12A12,12,0,0,1,188.00049,180Z"
      })));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "128",
        y1: "24",
        x2: "128",
        y2: "128",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("polyline", {
        points: "80 80 128 128 176 80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("circle", {
        cx: "188",
        cy: "168",
        r: "10"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "128",
        y1: "24",
        x2: "128",
        y2: "128",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("polyline", {
        points: "80 80 128 128 176 80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("circle", {
        cx: "188",
        cy: "168",
        r: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "128",
        y1: "24",
        x2: "128",
        y2: "128",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("polyline", {
        points: "80 80 128 128 176 80",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("circle", {
        cx: "188",
        cy: "168",
        r: "12"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var Download = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
Download.displayName = "Download";

export default Download;
//# sourceMappingURL=Download.esm.js.map
