import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "128",
        x2: "128",
        y2: "32",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "211.13844",
        y1: "80",
        x2: "44.86156",
        y2: "176",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M128,32A96,96,0,1,1,45.21664,176.64005",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M87.99413,106.14643,32.532,138.16712A97.09884,97.09884,0,0,1,32,128,96.0159,96.0159,0,0,1,87.99362,40.7076Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("g", {
        opacity: "0.2"
      }, React.createElement("path", {
        d: "M33.60061,145.5506A96.15147,96.15147,0,0,1,95.99845,37.46313V109.5252Z"
      })), React.createElement("line", {
        x1: "128",
        y1: "128",
        x2: "128",
        y2: "32",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "211.13844",
        y1: "80",
        x2: "44.86156",
        y2: "176",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M33.60061,145.5506A96.15147,96.15147,0,0,1,95.99845,37.46313V109.5252Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M128,32A96,96,0,1,1,45.21664,176.64005",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("g", null, React.createElement("path", {
        d: "M99.99854,116.45312a7.99932,7.99932,0,0,0,4-6.92773V37.46289a8.00029,8.00029,0,0,0-10.666-7.54248,104.15035,104.15035,0,0,0-67.59863,117.0835,7.99907,7.99907,0,0,0,11.8667,5.47461Zm-12-66.86328v55.31641L40.11621,132.55078Q40.00048,130.27881,40,128A88.20107,88.20107,0,0,1,87.99854,49.58984Z"
      }), React.createElement("path", {
        d: "M218.27124,76.39893c-.06738-.13331-.12878-.26807-.20435-.39893-.102-.17676-.21545-.34229-.32849-.50781A104.0515,104.0515,0,0,0,128,24a8.00008,8.00008,0,0,0-8,8v91.38135L40.86133,169.07178A8.00042,8.00042,0,0,0,37.93311,180c.03369.05811.07592.10791.11084.165.08837.17969.17614.35889.27929.53418A104.0111,104.0111,0,0,0,232,128,103.36465,103.36465,0,0,0,218.27124,76.39893Z"
      })));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "128",
        x2: "128",
        y2: "32",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "211.13844",
        y1: "80",
        x2: "44.86156",
        y2: "176",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M33.60061,145.5506A96.15147,96.15147,0,0,1,95.99845,37.46313V109.5252Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M128,32A96,96,0,1,1,45.21664,176.64005",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "128",
        x2: "128",
        y2: "32",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "211.13844",
        y1: "80",
        x2: "44.86156",
        y2: "176",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M33.60061,145.5506A96.15147,96.15147,0,0,1,95.99845,37.46313V109.5252Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M128,32A96,96,0,1,1,45.21664,176.64005",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "128",
        y1: "128",
        x2: "128",
        y2: "32",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "211.13844",
        y1: "80",
        x2: "44.86156",
        y2: "176",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M33.60061,145.5506A96.15147,96.15147,0,0,1,95.99845,37.46313V109.5252Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M128,32A96,96,0,1,1,45.21664,176.64005",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var ChartPieSlice = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
ChartPieSlice.displayName = "ChartPieSlice";

export default ChartPieSlice;
//# sourceMappingURL=ChartPieSlice.esm.js.map
