{"version":3,"file":"ArrowURightUp.esm.js","sources":["../../src/icons/ArrowURightUp.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <polyline\n            points=\"120 80 168 32 216 80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M56,80v88a56,56,0,0,0,56,56h.00011A55.99988,55.99988,0,0,0,168,168.00011V32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <polyline\n            points=\"120 80 168 32 216 80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M56,80v88a56,56,0,0,0,56,56h.00011A55.99988,55.99988,0,0,0,168,168.00011V32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M221.65723,74.34326l-48-48c-.02076-.02051-.04346-.0376-.06446-.0581-.167-.16358-.33935-.32178-.52026-.47022-.09912-.08154-.20337-.15234-.30518-.22851-.10766-.08008-.2124-.16358-.324-.2378-.11768-.0791-.23975-.14746-.36084-.21924-.10327-.06152-.2041-.12646-.3103-.18359-.12232-.06543-.24805-.12109-.37281-.17969-.11206-.05273-.22192-.1084-.33667-.15625-.12158-.05029-.2456-.09082-.36889-.13476-.12305-.04444-.24439-.09131-.37012-.1294-.12353-.03759-.249-.06494-.374-.09619-.12842-.03222-.25489-.06836-.3855-.09424-.14478-.02881-.29126-.0459-.437-.06689-.11231-.01563-.2229-.03711-.33667-.04834a8.06858,8.06858,0,0,0-1.58106,0c-.11377.01123-.22436.03271-.33667.04834-.14575.021-.29223.03808-.437.06689-.13061.02588-.25708.062-.3855.09424-.125.03125-.25049.0586-.374.09619-.12573.03809-.24707.085-.37012.1294-.12329.04394-.24731.08447-.36889.13476-.11475.04785-.22461.10352-.33667.15625-.12476.0586-.25049.11426-.37281.17969-.1062.05713-.207.12207-.3103.18359-.12109.07178-.24316.14014-.36084.21924-.11157.07422-.21631.15772-.324.2378-.10181.07617-.20606.147-.30518.22851-.18091.14844-.35327.30664-.52026.47022-.021.0205-.0437.03759-.06446.0581l-48,48a8.00018,8.00018,0,0,0,11.31446,11.31348L160,51.314V168a48,48,0,0,1-96,0V80a8,8,0,0,0-16,0v88a64,64,0,0,0,128,0V51.314l34.34277,34.34278a8.00018,8.00018,0,0,0,11.31446-11.31348Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <polyline\n            points=\"120 80 168 32 216 80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M56,80v88a56,56,0,0,0,56,56h.00011A55.99988,55.99988,0,0,0,168,168.00011V32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <polyline\n            points=\"120 80 168 32 216 80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M56,80v88a56,56,0,0,0,56,56h.00011A55.99988,55.99988,0,0,0,168,168.00011V32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <polyline\n            points=\"120 80 168 32 216 80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M56,80v88a56,56,0,0,0,56,56h.00011A55.99988,55.99988,0,0,0,168,168.00011V32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowURightUp = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nArrowURightUp.displayName = \"ArrowURightUp\";\n\nexport default ArrowURightUp;\n"],"names":["renderPathFor","weight","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","console","error","ArrowURightUp","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","width","height","viewBox","transform","undefined","displayName"],"mappings":"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"}