import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M152,84H111.83477L104,132.20232a27.99935,27.99935,0,1,1,0,39.5969",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        opacity: "0.2"
      }), React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        fill: "none",
        stroke: color,
        strokeMiterlimit: "10",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M152,84H111.83477L104,132.20232a27.99935,27.99935,0,1,1,0,39.5969",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M128,24A104,104,0,1,0,232,128,104.11791,104.11791,0,0,0,128,24ZM123.88184,116.002A35.99912,35.99912,0,1,1,98.35449,177.4668a7.99985,7.99985,0,1,1,11.291-11.33594,20.20173,20.20173,0,0,0,28.47461-.001,19.91646,19.91646,0,0,0-.001-28.25976,20.20412,20.20412,0,0,0-28.47461.001,7.99971,7.99971,0,0,1-13.541-6.95214l7.835-48.20215A8.00076,8.00076,0,0,1,111.835,76H152a8,8,0,0,1,0,16H118.63965L114.542,117.21094A36.413,36.413,0,0,1,123.88184,116.002Z"
      }));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M152,84H111.83477L104,132.20232a27.99935,27.99935,0,1,1,0,39.5969",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M152,84H111.83477L104,132.20232a27.99935,27.99935,0,1,1,0,39.5969",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("circle", {
        cx: "128",
        cy: "128",
        r: "96",
        fill: "none",
        stroke: color,
        strokeMiterlimit: "10",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M152,84H111.83477L104,132.20232a27.99935,27.99935,0,1,1,0,39.5969",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var NumberCircleFive = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
NumberCircleFive.displayName = "NumberCircleFive";

export default NumberCircleFive;
//# sourceMappingURL=NumberCircleFive.esm.js.map
