{"version":3,"file":"LockKey.esm.js","sources":["../../src/icons/LockKey.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"39.99414\"\n            y=\"88\"\n            width=\"176\"\n            height=\"128\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <circle\n            cx=\"127.99414\"\n            cy=\"144\"\n            r=\"20\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"127.99414\"\n            y1=\"164\"\n            x2=\"127.99414\"\n            y2=\"180\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <path\n            d=\"M207.99414,88h-160a8,8,0,0,0-8,8V208a8,8,0,0,0,8,8h160a8,8,0,0,0,8-8V96A8,8,0,0,0,207.99414,88Zm-80,72a20,20,0,1,1,20-20A20.00006,20.00006,0,0,1,127.99414,160Z\"\n            opacity=\"0.2\"\n          />\n          <circle\n            cx=\"127.99414\"\n            cy=\"140\"\n            r=\"20\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"127.99414\"\n            y1=\"160\"\n            x2=\"127.99414\"\n            y2=\"184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"39.99414\"\n            y=\"88\"\n            width=\"176\"\n            height=\"128\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <circle cx=\"127.99414\" cy=\"140\" r=\"12\" />\n            <path d=\"M207.99414,80h-36V52a44,44,0,1,0-88,0V80h-36a16.01833,16.01833,0,0,0-16,16V208a16.01833,16.01833,0,0,0,16,16h160a16.01833,16.01833,0,0,0,16-16V96A16.01833,16.01833,0,0,0,207.99414,80Zm-72,86.82935V184a8,8,0,1,1-16,0V166.82935a28,28,0,1,1,16,0Zm20-86.82935h-56V52a28,28,0,1,1,56,0Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <circle\n            cx=\"127.99414\"\n            cy=\"140\"\n            r=\"20\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"127.99414\"\n            y1=\"160\"\n            x2=\"127.99414\"\n            y2=\"184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <rect\n            x=\"39.99414\"\n            y=\"88\"\n            width=\"176\"\n            height=\"128\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <circle\n            cx=\"127.99414\"\n            cy=\"140\"\n            r=\"20\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"127.99414\"\n            y1=\"160\"\n            x2=\"127.99414\"\n            y2=\"184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <rect\n            x=\"39.99414\"\n            y=\"88\"\n            width=\"176\"\n            height=\"128\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <circle\n            cx=\"127.99414\"\n            cy=\"140\"\n            r=\"20\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"127.99414\"\n            y1=\"160\"\n            x2=\"127.99414\"\n            y2=\"184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"39.99414\"\n            y=\"88\"\n            width=\"176\"\n            height=\"128\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M91.99414,88V52a36,36,0,1,1,72,0V88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst LockKey = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nLockKey.displayName = \"LockKey\";\n\nexport default LockKey;\n"],"names":["renderPathFor","weight","color","React","x","y","width","height","rx","strokeWidth","stroke","strokeLinecap","strokeLinejoin","fill","d","cx","cy","r","x1","y1","x2","y2","opacity","console","error","LockKey","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","transform","undefined","displayName"],"mappings":"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"}