{"version":3,"file":"Upload.esm.js","sources":["../../src/icons/Upload.tsx"],"sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <path\n            d=\"M172,128h52a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H84\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"128\"\n            x2=\"128\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"80 72 128 24 176 72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <circle cx=\"188\" cy=\"168\" r=\"16\" />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect x=\"24\" y=\"128\" width=\"208\" height=\"80\" rx=\"8\" opacity=\"0.2\" />\n          <path\n            d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"128\"\n            x2=\"128\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"80 72 128 24 176 72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <circle cx=\"188\" cy=\"168\" r=\"12\" />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M85.65674,77.65723,120,43.31348V128a8,8,0,0,0,16,0V43.31348l34.34326,34.34375a8.00018,8.00018,0,0,0,11.31348-11.31446l-48-48c-.023-.02246-.04785-.0415-.0708-.064-.165-.16113-.33545-.31787-.51416-.46485-.09619-.07861-.19776-.14746-.29639-.22119-.11035-.08252-.21826-.168-.333-.24511-.11377-.07618-.23242-.14209-.34912-.21192-.10742-.06445-.2124-.13183-.32324-.19092-.11572-.062-.23535-.11425-.35352-.17041-.11865-.05615-.23584-.11523-.35742-.166-.11181-.0459-.22558-.083-.33887-.12354-.1333-.04834-.26513-.09961-.40185-.14062-.10889-.0332-.21973-.05664-.33008-.085-.14258-.03662-.28369-.07617-.42969-.105-.12109-.02393-.24365-.0376-.36523-.05567-.13623-.0205-.271-.04541-.40918-.05908-.20215-.01953-.40479-.02637-.60742-.03076C128.11768,16.00781,128.05957,16,128,16s-.11768.00781-.17676.00879c-.20263.00439-.40527.01123-.60742.03076-.13818.01367-.27295.03858-.40918.05908-.12158.01807-.24414.03174-.36523.05567-.146.02881-.28711.06836-.42969.105-.11035.02832-.22119.05176-.33008.085-.13672.041-.26855.09228-.40185.14062-.11329.04053-.22706.07764-.33887.12354-.12158.05078-.23877.10986-.35742.166-.11817.05616-.2378.1084-.35352.17041-.11084.05909-.21582.12647-.32324.19092-.1167.06983-.23535.13574-.34912.21192-.11475.07714-.22266.16259-.333.24511-.09863.07373-.2002.14258-.29639.22119-.17578.14454-.34277.29834-.50537.457-.02588.0249-.0542.04638-.07959.07177l-48,48A8.00018,8.00018,0,0,0,85.65674,77.65723Z\" />\n            <path d=\"M224,120H152v8a24,24,0,0,1-48,0v-8H32a16.01833,16.01833,0,0,0-16,16v64a16.01833,16.01833,0,0,0,16,16H224a16.01833,16.01833,0,0,0,16-16V136A16.01833,16.01833,0,0,0,224,120Zm-35.99951,60a12,12,0,1,1,12-12A12,12,0,0,1,188.00049,180Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <path\n            d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"128\"\n            x2=\"128\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"80 72 128 24 176 72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <circle cx=\"188\" cy=\"168\" r=\"10\" />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <path\n            d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"128\"\n            x2=\"128\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"80 72 128 24 176 72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <circle cx=\"188\" cy=\"168\" r=\"8\" />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <path\n            d=\"M176,128h48a8,8,0,0,1,8,8v64a8,8,0,0,1-8,8H32a8,8,0,0,1-8-8V136a8,8,0,0,1,8-8H80\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"128\"\n            y1=\"128\"\n            x2=\"128\"\n            y2=\"24\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"80 72 128 24 176 72\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <circle cx=\"188\" cy=\"168\" r=\"12\" />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst Upload = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nUpload.displayName = \"Upload\";\n\nexport default Upload;\n"],"names":["renderPathFor","weight","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","points","cx","cy","r","x","y","width","height","rx","opacity","console","error","Upload","forwardRef","props","ref","size","mirrored","children","restProps","useContext","IconContext","contextColor","contextSize","contextWeight","contextMirrored","restContext","xmlns","viewBox","transform","undefined","displayName"],"mappings":"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"}