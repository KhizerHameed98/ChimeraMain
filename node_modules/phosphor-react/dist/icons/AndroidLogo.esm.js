import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "55.92969",
        y1: "24",
        x2: "75.27223",
        y2: "41.48751",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "199.92969",
        y1: "24",
        x2: "180.58646",
        y2: "41.48846",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M207.92969,152a80,80,0,0,1-160,0V104a80,80,0,0,1,160,0Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("line", {
        x1: "207.92969",
        y1: "124",
        x2: "47.92969",
        y2: "124",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("circle", {
        cx: "156",
        cy: "84",
        r: "16"
      }), React.createElement("circle", {
        cx: "100",
        cy: "84",
        r: "16"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M207.92969,120v32a80,80,0,0,1-160,0V120Z",
        opacity: "0.2"
      }), React.createElement("line", {
        x1: "55.92969",
        y1: "24",
        x2: "75.27223",
        y2: "41.48751",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "199.92969",
        y1: "24",
        x2: "180.58646",
        y2: "41.48846",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M207.92969,152a80,80,0,0,1-160,0V104a80,80,0,0,1,160,0Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "207.92969",
        y1: "120",
        x2: "47.92969",
        y2: "120",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("circle", {
        cx: "156",
        cy: "84",
        r: "12"
      }), React.createElement("circle", {
        cx: "100",
        cy: "84",
        r: "12"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("g", null, React.createElement("circle", {
        cx: "99.92969",
        cy: "84",
        r: "12"
      }), React.createElement("circle", {
        cx: "155.92969",
        cy: "84",
        r: "12"
      }), React.createElement("path", {
        d: "M191.083,42.78369l14.21191-12.84961a7.99994,7.99994,0,1,0-10.73047-11.86816l-15.71,14.20361A87.835,87.835,0,0,0,77.00488,32.269l-15.71-14.20312A7.99994,7.99994,0,1,0,50.56445,29.93408l14.2124,12.84961A87.69717,87.69717,0,0,0,39.92969,104v48a88,88,0,0,0,176,0V104A87.69973,87.69973,0,0,0,191.083,42.78369ZM127.92969,32a72.08124,72.08124,0,0,1,72,72v8h-144v-8A72.08124,72.08124,0,0,1,127.92969,32Z"
      })));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "55.92969",
        y1: "24",
        x2: "75.27223",
        y2: "41.48751",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "199.92969",
        y1: "24",
        x2: "180.58646",
        y2: "41.48846",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M207.92969,152a80,80,0,0,1-160,0V104a80,80,0,0,1,160,0Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("line", {
        x1: "207.92969",
        y1: "120",
        x2: "47.92969",
        y2: "120",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("circle", {
        cx: "156",
        cy: "84",
        r: "10"
      }), React.createElement("circle", {
        cx: "100",
        cy: "84",
        r: "10"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "55.92969",
        y1: "24",
        x2: "75.27223",
        y2: "41.48751",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "199.92969",
        y1: "24",
        x2: "180.58646",
        y2: "41.48846",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M207.92969,152a80,80,0,0,1-160,0V104a80,80,0,0,1,160,0Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("line", {
        x1: "207.92969",
        y1: "120",
        x2: "47.92969",
        y2: "120",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("circle", {
        cx: "156",
        cy: "84",
        r: "8"
      }), React.createElement("circle", {
        cx: "100",
        cy: "84",
        r: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("line", {
        x1: "56",
        y1: "24",
        x2: "75.34254",
        y2: "41.48751",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "200",
        y1: "24",
        x2: "180.65677",
        y2: "41.48846",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M208,152a80,80,0,0,1-160,0V104a80,80,0,0,1,160,0Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("line", {
        x1: "208",
        y1: "120",
        x2: "48",
        y2: "120",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("circle", {
        cx: "156",
        cy: "83.99998",
        r: "12"
      }), React.createElement("circle", {
        cx: "100",
        cy: "83.99998",
        r: "12"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var AndroidLogo = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
AndroidLogo.displayName = "AndroidLogo";

export default AndroidLogo;
//# sourceMappingURL=AndroidLogo.esm.js.map
