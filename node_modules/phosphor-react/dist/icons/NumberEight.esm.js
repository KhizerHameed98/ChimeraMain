import React, { forwardRef, useContext } from 'react';
import { IconContext } from '../lib/index.esm.js';
import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';

var renderPathFor = function renderPathFor(weight, color) {
  switch (weight) {
    case "bold":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M178.76923,71.66667a46.108,46.108,0,0,1-14.87,33.70542,53.13546,53.13546,0,0,1-71.79854,0,45.63467,45.63467,0,0,1,0-67.41085,53.13546,53.13546,0,0,1,71.79854,0A46.108,46.108,0,0,1,178.76923,71.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }), React.createElement("path", {
        d: "M188,175.66667a54.49122,54.49122,0,0,1-17.57359,39.83368,62.79644,62.79644,0,0,1-84.85282,0,53.93188,53.93188,0,0,1,0-79.66737,62.79644,62.79644,0,0,1,84.85282,0A54.49124,54.49124,0,0,1,188,175.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "24"
      }));

    case "duotone":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M178.76923,71.66667a46.108,46.108,0,0,1-14.87,33.70542,53.13546,53.13546,0,0,1-71.79854,0,45.63467,45.63467,0,0,1,0-67.41085,53.13546,53.13546,0,0,1,71.79854,0A46.108,46.108,0,0,1,178.76923,71.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M188,175.66667a54.49122,54.49122,0,0,1-17.57359,39.83368,62.79644,62.79644,0,0,1-84.85282,0,53.93188,53.93188,0,0,1,0-79.66737,62.79644,62.79644,0,0,1,84.85282,0A54.49124,54.49124,0,0,1,188,175.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    case "fill":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M175.90234,130.00049a68.12024,68.12024,0,0,0-16.36377-11.356,58.78324,58.78324,0,0,0,9.83643-7.43994,53.63156,53.63156,0,0,0,0-79.0752,61.13213,61.13213,0,0,0-82.75,0,53.63156,53.63156,0,0,0,0,79.0752,58.76231,58.76231,0,0,0,9.83667,7.43994,68.1188,68.1188,0,0,0-16.364,11.35645,61.93012,61.93012,0,0,0,0,91.332,70.79516,70.79516,0,0,0,95.80468-.00049,61.93012,61.93012,0,0,0,0-91.332ZM97.57617,99.53955a37.63752,37.63752,0,0,1,0-55.74609,45.13922,45.13922,0,0,1,60.84766,0,37.63752,37.63752,0,0,1,0,55.74609,45.13783,45.13783,0,0,1-60.84766,0Zm67.375,110.12842a54.80089,54.80089,0,0,1-73.90234.00049,45.936,45.936,0,0,1,0-68.00293,54.80089,54.80089,0,0,1,73.90234-.00049,45.936,45.936,0,0,1,0,68.00293Z"
      }));

    case "light":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M178.76923,71.66667a46.108,46.108,0,0,1-14.87,33.70542,53.13546,53.13546,0,0,1-71.79854,0,45.63467,45.63467,0,0,1,0-67.41085,53.13546,53.13546,0,0,1,71.79854,0A46.108,46.108,0,0,1,178.76923,71.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }), React.createElement("path", {
        d: "M188,175.66667a54.49122,54.49122,0,0,1-17.57359,39.83368,62.79644,62.79644,0,0,1-84.85282,0,53.93188,53.93188,0,0,1,0-79.66737,62.79644,62.79644,0,0,1,84.85282,0A54.49124,54.49124,0,0,1,188,175.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "12"
      }));

    case "thin":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M178.76923,71.66667a46.108,46.108,0,0,1-14.87,33.70542,53.13546,53.13546,0,0,1-71.79854,0,45.63467,45.63467,0,0,1,0-67.41085,53.13546,53.13546,0,0,1,71.79854,0A46.108,46.108,0,0,1,178.76923,71.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }), React.createElement("path", {
        d: "M188,175.66667a54.49122,54.49122,0,0,1-17.57359,39.83368,62.79644,62.79644,0,0,1-84.85282,0,53.93188,53.93188,0,0,1,0-79.66737,62.79644,62.79644,0,0,1,84.85282,0A54.49124,54.49124,0,0,1,188,175.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "8"
      }));

    case "regular":
      return React.createElement(React.Fragment, null, React.createElement("path", {
        d: "M178.76923,71.66667a46.108,46.108,0,0,1-14.87,33.70542,53.13546,53.13546,0,0,1-71.79854,0,45.63467,45.63467,0,0,1,0-67.41085,53.13546,53.13546,0,0,1,71.79854,0A46.108,46.108,0,0,1,178.76923,71.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }), React.createElement("path", {
        d: "M188,175.66667a54.49122,54.49122,0,0,1-17.57359,39.83368,62.79644,62.79644,0,0,1-84.85282,0,53.93188,53.93188,0,0,1,0-79.66737,62.79644,62.79644,0,0,1,84.85282,0A54.49124,54.49124,0,0,1,188,175.66667Z",
        fill: "none",
        stroke: color,
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "16"
      }));

    default:
      console.error('Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".');
      return null;
  }
};

var NumberEight = /*#__PURE__*/forwardRef(function (props, ref) {
  var color = props.color,
      size = props.size,
      weight = props.weight,
      mirrored = props.mirrored,
      children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["color", "size", "weight", "mirrored", "children"]);

  var _useContext = useContext(IconContext),
      contextColor = _useContext.color,
      contextSize = _useContext.size,
      contextWeight = _useContext.weight,
      contextMirrored = _useContext.mirrored,
      restContext = _objectWithoutPropertiesLoose(_useContext, ["color", "size", "weight", "mirrored"]);

  return React.createElement("svg", Object.assign({
    ref: ref,
    xmlns: "http://www.w3.org/2000/svg",
    width: size != null ? size : contextSize,
    height: size != null ? size : contextSize,
    fill: color != null ? color : contextColor,
    viewBox: "0 0 256 256",
    transform: mirrored || contextMirrored ? "scale(-1, 1)" : undefined
  }, restContext, restProps), children, React.createElement("rect", {
    width: "256",
    height: "256",
    fill: "none"
  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));
});
NumberEight.displayName = "NumberEight";

export default NumberEight;
//# sourceMappingURL=NumberEight.esm.js.map
