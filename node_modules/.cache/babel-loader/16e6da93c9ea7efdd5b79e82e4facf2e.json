{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"64\",\n        x2: \"152\",\n        y2: \"64\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"56\",\n        x2: \"160\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M176,16H80A24.0275,24.0275,0,0,0,56,40V216a24.0275,24.0275,0,0,0,24,24h96a24.0275,24.0275,0,0,0,24-24V40A24.0275,24.0275,0,0,0,176,16ZM160,64H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"56\",\n        x2: \"160\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"56\",\n        x2: \"160\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"24\",\n        y: \"64\",\n        width: \"208\",\n        height: \"128\",\n        rx: \"16\",\n        transform: \"translate(256) rotate(90)\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"56\",\n        x2: \"160\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar DeviceMobileSpeaker = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nDeviceMobileSpeaker.displayName = \"DeviceMobileSpeaker\";\nexport default DeviceMobileSpeaker;","map":{"version":3,"sources":["../../src/icons/DeviceMobileSpeaker.tsx"],"names":["renderPathFor","x","y","width","height","rx","transform","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","x1","y1","x2","y2","opacity","d","console","DeviceMobileSpeaker","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","viewBox","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"64\"\n            x2=\"152\"\n            y2=\"64\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"56\"\n            x2=\"160\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M176,16H80A24.0275,24.0275,0,0,0,56,40V216a24.0275,24.0275,0,0,0,24,24h96a24.0275,24.0275,0,0,0,24-24V40A24.0275,24.0275,0,0,0,176,16ZM160,64H96a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"56\"\n            x2=\"160\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"56\"\n            x2=\"160\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"24\"\n            y=\"64\"\n            width=\"208\"\n            height=\"128\"\n            rx=\"16\"\n            transform=\"translate(256) rotate(90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"56\"\n            x2=\"160\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst DeviceMobileSpeaker = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => {\n    const { color, size, weight, mirrored, children, ...restProps } = props;\n    const {\n      color: contextColor,\n      size: contextSize,\n      weight: contextWeight,\n      mirrored: contextMirrored,\n      ...restContext\n    } = useContext(IconContext);\n\n    return (\n      <svg\n        ref={ref}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size ?? contextSize}\n        height={size ?? contextSize}\n        fill={color ?? contextColor}\n        viewBox=\"0 0 256 256\"\n        transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n        {...restContext}\n        {...restProps}\n      >\n        {children}\n        <rect width=\"256\" height=\"256\" fill=\"none\" />\n        {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n      </svg>\n    );\n  }\n);\n\nDeviceMobileSpeaker.displayName = \"DeviceMobileSpeaker\";\n\nexport default DeviceMobileSpeaker;\n"]},"metadata":{},"sourceType":"module"}