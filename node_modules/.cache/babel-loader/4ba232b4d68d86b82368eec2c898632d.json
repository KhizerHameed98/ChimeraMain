{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"136 176 88 224 40 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"136 176 88 224 40 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M144,24A64.07207,64.07207,0,0,0,80,88V204.686L45.65723,170.34326a8.00018,8.00018,0,0,0-11.31446,11.31348l48,48c.02393.02392.05054.04394.075.06787.16407.15967.33252.31494.50977.46045.09961.082.20435.15332.30664.22949.10693.07959.21118.1626.322.23682.11914.07959.24219.14843.36426.22119.102.061.20166.125.30664.18115.1228.06592.249.12158.37451.18066.11182.05274.22144.1084.33594.15577.12061.0498.24341.09033.36572.13379.124.04443.24658.09228.37354.13086.12231.03662.24658.064.37036.09521.12939.03223.25708.06885.38891.09473.14209.02832.28565.04492.429.06543.11523.0166.22852.03857.34546.0498.26245.02588.52588.04.78955.04s.5271-.01416.78955-.04c.11694-.01123.23023-.0332.34546-.0498.14331-.02051.28686-.03711.429-.06543.13184-.02588.25953-.0625.38892-.09473.12378-.03125.24805-.05859.37036-.09521.127-.03858.24951-.08643.37354-.13086.12231-.04346.24511-.084.36572-.13379.1145-.04737.22412-.103.33594-.15577.12549-.05908.25171-.11474.37451-.18066.105-.05615.20459-.12012.30664-.18115.12207-.07276.24512-.1416.36426-.22119.11084-.07422.21509-.15723.322-.23682.10229-.07617.207-.14746.30664-.22949.17725-.14551.3457-.30078.50977-.46045.02441-.02393.051-.044.075-.06787l48-48a8.00018,8.00018,0,0,0-11.31446-11.31348L96,204.686V88a48,48,0,0,1,96,0v88a8,8,0,0,0,16,0V88A64.07207,64.07207,0,0,0,144,24Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"136 176 88 224 40 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"136 176 88 224 40 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"136 176 88 224 40 176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar ArrowULeftDown = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nArrowULeftDown.displayName = \"ArrowULeftDown\";\nexport default ArrowULeftDown;","map":{"version":3,"sources":["../../src/icons/ArrowULeftDown.tsx"],"names":["renderPathFor","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","console","ArrowULeftDown","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <polyline\n            points=\"136 176 88 224 40 176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <polyline\n            points=\"136 176 88 224 40 176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M144,24A64.07207,64.07207,0,0,0,80,88V204.686L45.65723,170.34326a8.00018,8.00018,0,0,0-11.31446,11.31348l48,48c.02393.02392.05054.04394.075.06787.16407.15967.33252.31494.50977.46045.09961.082.20435.15332.30664.22949.10693.07959.21118.1626.322.23682.11914.07959.24219.14843.36426.22119.102.061.20166.125.30664.18115.1228.06592.249.12158.37451.18066.11182.05274.22144.1084.33594.15577.12061.0498.24341.09033.36572.13379.124.04443.24658.09228.37354.13086.12231.03662.24658.064.37036.09521.12939.03223.25708.06885.38891.09473.14209.02832.28565.04492.429.06543.11523.0166.22852.03857.34546.0498.26245.02588.52588.04.78955.04s.5271-.01416.78955-.04c.11694-.01123.23023-.0332.34546-.0498.14331-.02051.28686-.03711.429-.06543.13184-.02588.25953-.0625.38892-.09473.12378-.03125.24805-.05859.37036-.09521.127-.03858.24951-.08643.37354-.13086.12231-.04346.24511-.084.36572-.13379.1145-.04737.22412-.103.33594-.15577.12549-.05908.25171-.11474.37451-.18066.105-.05615.20459-.12012.30664-.18115.12207-.07276.24512-.1416.36426-.22119.11084-.07422.21509-.15723.322-.23682.10229-.07617.207-.14746.30664-.22949.17725-.14551.3457-.30078.50977-.46045.02441-.02393.051-.044.075-.06787l48-48a8.00018,8.00018,0,0,0-11.31446-11.31348L96,204.686V88a48,48,0,0,1,96,0v88a8,8,0,0,0,16,0V88A64.07207,64.07207,0,0,0,144,24Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <polyline\n            points=\"136 176 88 224 40 176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <polyline\n            points=\"136 176 88 224 40 176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <polyline\n            points=\"136 176 88 224 40 176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M200,176V88a56,56,0,0,0-56-56h-.00011A55.99988,55.99988,0,0,0,88,87.99989V224\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowULeftDown = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nArrowULeftDown.displayName = \"ArrowULeftDown\";\n\nexport default ArrowULeftDown;\n"]},"metadata":{},"sourceType":"module"}