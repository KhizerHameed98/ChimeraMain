{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n        d: \"M236.71765,121.78477,212,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,236.71765,121.78477Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M44,133.0718,19.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,51.0307,59.30511L76,71.78976Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M212,134.14359l-12,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L44,133.0718\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H180\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M76.57437,71.78976l47.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M108,220.86156,77.86056,213.3267a7.99993,7.99993,0,0,1-3.308-1.7233L52,192\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      })));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", {\n        opacity: \"0.2\"\n      }, React.createElement(\"path\", {\n        d: \"M200,152.86156,163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718l32.57437-61.282,51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156H143.31371a8,8,0,0,0-5.65686,2.34315L98.52241,114.33915a8,8,0,0,0,.85685,12.05686L104.8,130.46156a32,32,0,0,0,38.4,0l12.8-9.6Z\"\n      })), React.createElement(\"circle\", {\n        cx: \"-112\",\n        cy: \"-108\",\n        r: \"119.97997\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\",\n        opacity: \"0.1\"\n      }), React.createElement(\"path\", {\n        d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M119.76074,214.80176a7.98886,7.98886,0,0,1-9.70117,5.82031l-30.13965-7.53418a16.0992,16.0992,0,0,1-6.61719-3.44727L50.752,190.03809a8,8,0,0,1,10.4961-12.07618l22.55273,19.60352,30.13965,7.53516A7.99856,7.99856,0,0,1,119.76074,214.80176Zm132.60156-95.2461a15.88206,15.88206,0,0,1-8.0664,9.38428L221.02783,140.574l-14.94678,17.48553c-.05224.061-.10937.11725-.16308.17664-.04932.05413-.09815.10785-.14844.16034-.03808.03985-.07324.08245-.1123.12152l-36.79688,36.79834a16.0981,16.0981,0,0,1-11.35058,4.67968,15.8477,15.8477,0,0,1-3.84473-.47265L95.708,185.03418a15.9025,15.9025,0,0,1-5.97559-2.918L35.7041,139.86829l-24-12.00013a16.0014,16.0014,0,0,1-7.02734-21.7163L29.26953,59.05469A16.07985,16.07985,0,0,1,50.6084,52.1499l22.375,11.18744L121.65527,49.148a16.01609,16.01609,0,0,1,11.07325.78271l32.99707,14.93067H182.1123l23.28028-11.63965A16.07317,16.07317,0,0,1,226.73047,60.127l24.59277,47.09619A15.87906,15.87906,0,0,1,252.3623,119.55566Zm-64.63916,34.26886-31.6499-23.01788L148,136.86133a40.20558,40.20558,0,0,1-48,0l-5.4209-4.06543a16.00034,16.00034,0,0,1-1.71387-24.11328L132,69.54785a16.1947,16.1947,0,0,1,1.8335-1.55548l-7.69971-3.48407L77.41016,78.71265,50.17432,130.872,99.58887,169.5127l57.957,14.48925Zm18.68311-20.76959-27.25439-52.1936h-15.1294l-.02734.002c-.0127,0-.02491-.00189-.03711-.002H143.31348l-39.13379,39.13476,5.41992,4.06543a24.1254,24.1254,0,0,0,28.80078,0l12.79981-9.60009a7.99783,7.99783,0,0,1,9.50488-.06983l38.019,27.65027Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar Handshake = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nHandshake.displayName = \"Handshake\";\nexport default Handshake;","map":{"version":3,"sources":["../../src/icons/Handshake.tsx"],"names":["renderPathFor","d","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","opacity","cx","cy","r","console","Handshake","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":";;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,MAAA,EAAA,KAAA,EAAA;AAIpB,UAAA,MAAA;AACE,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,0IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CADF,EASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,iHADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CATF,EAiBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,6IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjBF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,8IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzBF,EAiCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,sEADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjCF,EAyCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,4EADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzCF,CADF,CADF;;AAsDF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAGC,QAAAA,OAAO,EAAC;AAAX,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMP,QAAAA,CAAC,EAAC;AAAR,OAAA,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACEQ,QAAAA,EAAE,EAAC,MADL;AAEEC,QAAAA,EAAE,EAAC,MAFL;AAGEC,QAAAA,CAAC,EAAC,WAHJ;AAIET,QAAAA,IAAI,EAAC,MAJP;AAKEC,QAAAA,MAAM,EAAEC,KALV;AAMEC,QAAAA,aAAa,EAAC,OANhB;AAOEC,QAAAA,cAAc,EAAC,OAPjB;AAQEC,QAAAA,WAAW,EAAC,IARd;AASEC,QAAAA,OAAO,EAAC;AATV,OAAA,CAJF,EAeE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEP,QAAAA,CAAC,EAAC,0IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAfF,EAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,iHADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAvBF,EA+BE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,6IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CA/BF,EAuCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,8IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAvCF,EA+CE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,sEADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CA/CF,EAuDE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,4EADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAvDF,CADF;;AAkEF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMN,QAAAA,CAAC,EAAC;AAAR,OAAA,CADF,CADF;;AAKF,SAAA,OAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEA,QAAAA,CAAC,EAAC,0IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CADF,EASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,iHADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CATF,EAiBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,6IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjBF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,8IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzBF,EAiCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,sEADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjCF,EAyCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,4EADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzCF,CADF;;AAoDF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,0IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CADF,EASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,iHADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CATF,EAiBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,6IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjBF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,8IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzBF,EAiCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,sEADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjCF,EAyCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,4EADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzCF,CADF;;AAoDF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,0IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CADF,EASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,iHADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CATF,EAiBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,6IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjBF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,8IADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzBF,EAiCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,sEADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAjCF,EAyCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEN,QAAAA,CAAC,EAAC,4EADJ;AAEEC,QAAAA,IAAI,EAAC,MAFP;AAGEC,QAAAA,MAAM,EAAEC,KAHV;AAIEC,QAAAA,aAAa,EAAC,OAJhB;AAKEC,QAAAA,cAAc,EAAC,OALjB;AAMEC,QAAAA,WAAW,EAAC;AANd,OAAA,CAzCF,CADF;;AAoDF;AACEK,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,gGAAAA;AAGA,aAAA,IAAA;AApSJ;AAJF,CAAA;;AA4SA,IAAMC,SAAS,GAAA,aAAGC,UAAU,CAA2B,UAAA,KAAA,EAAA,GAAA,EAAA;MAC7CV,KAAAA,GAA0DgB,KAAAA,CAA1DhB,K;MAAOW,IAAAA,GAAmDK,KAAAA,CAAnDL,I;MAAMC,MAAAA,GAA6CI,KAAAA,CAA7CJ,M;MAAQC,QAAAA,GAAqCG,KAAAA,CAArCH,Q;MAAUC,QAAAA,GAA2BE,KAAAA,CAA3BF,Q;MAAaC,SAAAA,GAAAA,6BAAAA,CAAcC,KAAdD,EAAcC,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,EAAAA,UAAAA,CAAdD,C;;oBAOhDO,UAAU,CAAA,WAAA,C;MALLL,YAAAA,GAAAA,WAAAA,CAAPjB,K;MACMkB,WAAAA,GAAAA,WAAAA,CAANP,I;MACQQ,aAAAA,GAAAA,WAAAA,CAARP,M;MACUQ,eAAAA,GAAAA,WAAAA,CAAVP,Q;MACGQ,WAAAA,GAAAA,6BAAAA,CAAAA,WAAAA,EAAAA,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,CAAAA,C;;AAGL,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEE,IAAAA,GAAG,EAAEA,GADP;AAEEC,IAAAA,KAAK,EAAC,4BAFR;AAGEC,IAAAA,KAAK,EAAEd,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAHjB;AAIEQ,IAAAA,MAAM,EAAEf,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAJlB;AAKEpB,IAAAA,IAAI,EAAEE,KAAF,IAAA,IAAEA,GAAF,KAAEA,GAASiB,YALjB;AAMEU,IAAAA,OAAO,EAAC,aANV;AAOEC,IAAAA,SAAS,EAAEf,QAAQ,IAARA,eAAAA,GAAAA,cAAAA,GAA+CgB;AAP5D,GAAA,EAQMR,WARN,EAAA,SAAA,CAAA,EAAA,QAAA,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMI,IAAAA,KAAK,EAAC,KAAZ;AAAkBC,IAAAA,MAAM,EAAC,KAAzB;AAA+B5B,IAAAA,IAAI,EAAC;AAApC,GAAA,CAZF,EAaGF,aAAa,CAACgB,MAAD,IAAA,IAACA,GAAD,MAACA,GAAD,aAAA,EAA0BZ,KAA1B,IAAA,IAA0BA,GAA1B,KAA0BA,GAd5C,YAckB,CAbhB,CADF;AAVF,CAA4B,CAA5B;AA6BAS,SAAS,CAATA,WAAAA,GAAAA,WAAAA","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <g>\n            <path\n              d=\"M236.71765,121.78477,212,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,236.71765,121.78477Z\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n            <path\n              d=\"M44,133.0718,19.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,51.0307,59.30511L76,71.78976Z\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n            <path\n              d=\"M212,134.14359l-12,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L44,133.0718\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n            <path\n              d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H180\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n            <path\n              d=\"M76.57437,71.78976l47.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n            <path\n              d=\"M108,220.86156,77.86056,213.3267a7.99993,7.99993,0,0,1-3.308-1.7233L52,192\"\n              fill=\"none\"\n              stroke={color}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"24\"\n            />\n          </g>\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <g opacity=\"0.2\">\n            <path d=\"M200,152.86156,163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718l32.57437-61.282,51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156H143.31371a8,8,0,0,0-5.65686,2.34315L98.52241,114.33915a8,8,0,0,0,.85685,12.05686L104.8,130.46156a32,32,0,0,0,38.4,0l12.8-9.6Z\" />\n          </g>\n          <circle\n            cx=\"-112\"\n            cy=\"-108\"\n            r=\"119.97997\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n            opacity=\"0.1\"\n          />\n          <path\n            d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M119.76074,214.80176a7.98886,7.98886,0,0,1-9.70117,5.82031l-30.13965-7.53418a16.0992,16.0992,0,0,1-6.61719-3.44727L50.752,190.03809a8,8,0,0,1,10.4961-12.07618l22.55273,19.60352,30.13965,7.53516A7.99856,7.99856,0,0,1,119.76074,214.80176Zm132.60156-95.2461a15.88206,15.88206,0,0,1-8.0664,9.38428L221.02783,140.574l-14.94678,17.48553c-.05224.061-.10937.11725-.16308.17664-.04932.05413-.09815.10785-.14844.16034-.03808.03985-.07324.08245-.1123.12152l-36.79688,36.79834a16.0981,16.0981,0,0,1-11.35058,4.67968,15.8477,15.8477,0,0,1-3.84473-.47265L95.708,185.03418a15.9025,15.9025,0,0,1-5.97559-2.918L35.7041,139.86829l-24-12.00013a16.0014,16.0014,0,0,1-7.02734-21.7163L29.26953,59.05469A16.07985,16.07985,0,0,1,50.6084,52.1499l22.375,11.18744L121.65527,49.148a16.01609,16.01609,0,0,1,11.07325.78271l32.99707,14.93067H182.1123l23.28028-11.63965A16.07317,16.07317,0,0,1,226.73047,60.127l24.59277,47.09619A15.87906,15.87906,0,0,1,252.3623,119.55566Zm-64.63916,34.26886-31.6499-23.01788L148,136.86133a40.20558,40.20558,0,0,1-48,0l-5.4209-4.06543a16.00034,16.00034,0,0,1-1.71387-24.11328L132,69.54785a16.1947,16.1947,0,0,1,1.8335-1.55548l-7.69971-3.48407L77.41016,78.71265,50.17432,130.872,99.58887,169.5127l57.957,14.48925Zm18.68311-20.76959-27.25439-52.1936h-15.1294l-.02734.002c-.0127,0-.02491-.00189-.03711-.002H143.31348l-39.13379,39.13476,5.41992,4.06543a24.1254,24.1254,0,0,0,28.80078,0l12.79981-9.60009a7.99783,7.99783,0,0,1,9.50488-.06983l38.019,27.65027Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <path\n            d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <path\n            d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <path\n            d=\"M240.71765,121.78477,216,134.14359l-32-61.282,24.9693-12.48465a8,8,0,0,1,10.66912,3.45246l24.59293,47.097A8,8,0,0,1,240.71765,121.78477Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M40,133.0718,15.28235,120.713a8,8,0,0,1-3.5137-10.85838l24.59293-47.097A8,8,0,0,1,47.0307,59.30511L72,71.78976Z\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M216,134.14359l-16,18.718L163.20286,189.6587a8,8,0,0,1-7.59714,2.10429L97.64881,177.27376a7.99992,7.99992,0,0,1-2.98764-1.45911L40,133.0718\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M200,152.86156l-44-32-12.8,9.6a32,32,0,0,1-38.4,0L99.37926,126.396a8,8,0,0,1-.85685-12.05686l39.13444-39.13444a8,8,0,0,1,5.65686-2.34315H184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M72.57437,71.78976l51.32-14.96153a8,8,0,0,1,5.537.39169L164,72.86156\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M112,212.86156,81.86056,205.3267a7.99993,7.99993,0,0,1-3.308-1.7233L56,184\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst Handshake = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nHandshake.displayName = \"Handshake\";\n\nexport default Handshake;\n"]},"metadata":{},"sourceType":"module"}