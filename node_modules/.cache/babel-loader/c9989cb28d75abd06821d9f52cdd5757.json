{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"160 48 208 48 208 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"104\",\n        x2: \"208\",\n        y2: \"48\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"96 208 48 208 48 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"152\",\n        x2: \"48\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"160 48 208 48 208 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"104\",\n        x2: \"208\",\n        y2: \"48\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"96 208 48 208 48 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"152\",\n        x2: \"48\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n        d: \"M215.96,47.208c-.01074-.10767-.03125-.21216-.0459-.31861-.02148-.1521-.03955-.30444-.06933-.45532-.02539-.12646-.06006-.24853-.09131-.37256-.03174-.12915-.06055-.259-.09912-.38672-.03711-.12255-.0835-.24072-.126-.36059-.04541-.12647-.0874-.25366-.13867-.37842-.0459-.11108-.10059-.21728-.15137-.32568-.06006-.12866-.11719-.25806-.18506-.384-.05517-.10278-.11767-.20019-.17724-.30029-.07373-.124-.144-.24927-.22461-.36987-.07373-.10962-.15576-.21265-.23438-.31836-.07666-.10352-.14892-.20947-.23193-.31006-.14844-.18091-.30664-.35327-.47022-.52026-.02-.02076-.03711-.04346-.05761-.064-.01612-.01611-.03418-.0293-.0503-.04541-.17138-.1687-.34912-.331-.53564-.48389-.09375-.07714-.19287-.14453-.28955-.21679-.11279-.084-.22266-.17139-.33985-.24951-.11279-.07569-.23046-.14136-.34668-.2107-.10791-.06469-.21386-.13257-.32519-.19214-.1167-.0625-.23682-.11523-.356-.17138-.11767-.05591-.2334-.1145-.35449-.16455-.11377-.04712-.22949-.085-.34473-.12647-.13134-.04736-.26074-.09741-.395-.13794-.11377-.03442-.22949-.05932-.34423-.08862-.1377-.03516-.27442-.07324-.41455-.10107-.13038-.02588-.26221-.04078-.39356-.06006-.127-.01856-.252-.04248-.38086-.05494-.23193-.02294-.46484-.03271-.69824-.0354C208.05859,40.00415,208.02979,40,208,40H160a8,8,0,0,0,0,16h28.686L146.34277,98.34326a8.00018,8.00018,0,0,0,11.31446,11.31348L200,67.314V96a8,8,0,0,0,16,0V48.00513Q216,47.606,215.96,47.208Z\"\n      }), React.createElement(\"path\", {\n        d: \"M98.34277,146.34326,56,188.686V160a8,8,0,0,0-16,0v47.99487q0,.39918.04.79712c.01074.10767.03125.21216.0459.31861.02148.1521.03955.30444.06933.45532.02539.12646.06006.24853.09131.37256.03174.12915.06055.259.09912.38672.03711.12255.0835.24072.126.36059.04541.12647.0874.25366.13867.37842.0459.11108.10059.21728.15137.32568.06006.12866.11719.25806.18506.384.05517.10278.11767.20019.17724.30029.07373.124.14405.24927.22461.36987.07373.10962.15576.21265.23438.31836.07666.10352.14892.20947.23193.31006.14844.18091.30664.35327.47022.52026.02.02076.03711.04346.05761.064.01612.01611.03418.0293.0503.04541.17138.1687.34912.33105.53564.48389.09424.07763.19385.145.291.21777.11181.08374.22168.17041.33789.24853.11474.07666.23388.14331.35156.21363.10644.06347.21045.13012.31934.18872.12011.06421.24365.11865.36621.17627.11425.05395.22656.11084.34375.15942.11816.04907.23877.08862.35888.13159.12647.04541.25147.09375.38037.13306.12012.03613.2417.06274.36231.093.13184.0332.26221.07031.39648.09692.14063.02783.28321.04443.42481.0647.1167.0166.231.03882.34912.05029.26221.02588.52588.04.78955.04H96a8,8,0,0,0,0-16H67.314l42.34327-42.34326a8.00018,8.00018,0,0,0-11.31446-11.31348Z\"\n      })));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"160 48 208 48 208 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"104\",\n        x2: \"208\",\n        y2: \"48\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"96 208 48 208 48 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"152\",\n        x2: \"48\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"160 48 208 48 208 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"104\",\n        x2: \"208\",\n        y2: \"48\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"96 208 48 208 48 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"152\",\n        x2: \"48\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"160 48 208 48 208 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"104\",\n        x2: \"208\",\n        y2: \"48\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"96 208 48 208 48 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"104\",\n        y1: \"152\",\n        x2: \"48\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar ArrowsOutSimple = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nArrowsOutSimple.displayName = \"ArrowsOutSimple\";\nexport default ArrowsOutSimple;","map":{"version":3,"sources":["../../src/icons/ArrowsOutSimple.tsx"],"names":["renderPathFor","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","d","console","ArrowsOutSimple","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <polyline\n            points=\"160 48 208 48 208 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"104\"\n            x2=\"208\"\n            y2=\"48\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"96 208 48 208 48 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"152\"\n            x2=\"48\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <polyline\n            points=\"160 48 208 48 208 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"104\"\n            x2=\"208\"\n            y2=\"48\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"96 208 48 208 48 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"152\"\n            x2=\"48\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M215.96,47.208c-.01074-.10767-.03125-.21216-.0459-.31861-.02148-.1521-.03955-.30444-.06933-.45532-.02539-.12646-.06006-.24853-.09131-.37256-.03174-.12915-.06055-.259-.09912-.38672-.03711-.12255-.0835-.24072-.126-.36059-.04541-.12647-.0874-.25366-.13867-.37842-.0459-.11108-.10059-.21728-.15137-.32568-.06006-.12866-.11719-.25806-.18506-.384-.05517-.10278-.11767-.20019-.17724-.30029-.07373-.124-.144-.24927-.22461-.36987-.07373-.10962-.15576-.21265-.23438-.31836-.07666-.10352-.14892-.20947-.23193-.31006-.14844-.18091-.30664-.35327-.47022-.52026-.02-.02076-.03711-.04346-.05761-.064-.01612-.01611-.03418-.0293-.0503-.04541-.17138-.1687-.34912-.331-.53564-.48389-.09375-.07714-.19287-.14453-.28955-.21679-.11279-.084-.22266-.17139-.33985-.24951-.11279-.07569-.23046-.14136-.34668-.2107-.10791-.06469-.21386-.13257-.32519-.19214-.1167-.0625-.23682-.11523-.356-.17138-.11767-.05591-.2334-.1145-.35449-.16455-.11377-.04712-.22949-.085-.34473-.12647-.13134-.04736-.26074-.09741-.395-.13794-.11377-.03442-.22949-.05932-.34423-.08862-.1377-.03516-.27442-.07324-.41455-.10107-.13038-.02588-.26221-.04078-.39356-.06006-.127-.01856-.252-.04248-.38086-.05494-.23193-.02294-.46484-.03271-.69824-.0354C208.05859,40.00415,208.02979,40,208,40H160a8,8,0,0,0,0,16h28.686L146.34277,98.34326a8.00018,8.00018,0,0,0,11.31446,11.31348L200,67.314V96a8,8,0,0,0,16,0V48.00513Q216,47.606,215.96,47.208Z\" />\n            <path d=\"M98.34277,146.34326,56,188.686V160a8,8,0,0,0-16,0v47.99487q0,.39918.04.79712c.01074.10767.03125.21216.0459.31861.02148.1521.03955.30444.06933.45532.02539.12646.06006.24853.09131.37256.03174.12915.06055.259.09912.38672.03711.12255.0835.24072.126.36059.04541.12647.0874.25366.13867.37842.0459.11108.10059.21728.15137.32568.06006.12866.11719.25806.18506.384.05517.10278.11767.20019.17724.30029.07373.124.14405.24927.22461.36987.07373.10962.15576.21265.23438.31836.07666.10352.14892.20947.23193.31006.14844.18091.30664.35327.47022.52026.02.02076.03711.04346.05761.064.01612.01611.03418.0293.0503.04541.17138.1687.34912.33105.53564.48389.09424.07763.19385.145.291.21777.11181.08374.22168.17041.33789.24853.11474.07666.23388.14331.35156.21363.10644.06347.21045.13012.31934.18872.12011.06421.24365.11865.36621.17627.11425.05395.22656.11084.34375.15942.11816.04907.23877.08862.35888.13159.12647.04541.25147.09375.38037.13306.12012.03613.2417.06274.36231.093.13184.0332.26221.07031.39648.09692.14063.02783.28321.04443.42481.0647.1167.0166.231.03882.34912.05029.26221.02588.52588.04.78955.04H96a8,8,0,0,0,0-16H67.314l42.34327-42.34326a8.00018,8.00018,0,0,0-11.31446-11.31348Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <polyline\n            points=\"160 48 208 48 208 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"104\"\n            x2=\"208\"\n            y2=\"48\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"96 208 48 208 48 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"152\"\n            x2=\"48\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <polyline\n            points=\"160 48 208 48 208 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"104\"\n            x2=\"208\"\n            y2=\"48\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"96 208 48 208 48 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"152\"\n            x2=\"48\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <polyline\n            points=\"160 48 208 48 208 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"104\"\n            x2=\"208\"\n            y2=\"48\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"96 208 48 208 48 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"104\"\n            y1=\"152\"\n            x2=\"48\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowsOutSimple = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nArrowsOutSimple.displayName = \"ArrowsOutSimple\";\n\nexport default ArrowsOutSimple;\n"]},"metadata":{},"sourceType":"module"}