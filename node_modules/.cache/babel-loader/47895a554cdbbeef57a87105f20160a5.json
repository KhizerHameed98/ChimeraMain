{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"128\",\n        x2: \"104\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"176\",\n        x2: \"104\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"176\",\n        height: \"176\",\n        rx: \"8\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"176\",\n        y1: \"20\",\n        x2: \"176\",\n        y2: \"40\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"80\",\n        y1: \"20\",\n        x2: \"80\",\n        y2: \"40\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"40\",\n        y1: \"88\",\n        x2: \"216\",\n        y2: \"88\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M40,88H216V48a8,8,0,0,0-8-8H48a8,8,0,0,0-8,8Z\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"176\",\n        height: \"176\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"176\",\n        y1: \"24\",\n        x2: \"176\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"80\",\n        y1: \"24\",\n        x2: \"80\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"40\",\n        y1: \"88\",\n        x2: \"216\",\n        y2: \"88\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"128\",\n        x2: \"104\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"176\",\n        x2: \"104\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M207.99414,31.9971h-24v-8a8,8,0,1,0-16,0v8h-80v-8a8,8,0,0,0-16,0v8h-24a16.01583,16.01583,0,0,0-16,16v160a16.01582,16.01582,0,0,0,16,16h160a16.01581,16.01581,0,0,0,16-16v-160A16.01582,16.01582,0,0,0,207.99414,31.9971ZM157.65039,170.34085a7.99915,7.99915,0,1,1-11.3125,11.3125L127.99414,163.3096l-18.34375,18.34375a7.99915,7.99915,0,0,1-11.3125-11.3125l18.34375-18.34375L98.33789,133.65335a7.99915,7.99915,0,1,1,11.3125-11.3125l18.34375,18.34375,18.34375-18.34375a7.99915,7.99915,0,1,1,11.3125,11.3125L139.30664,151.9971ZM207.99414,79.9971h-160v-32h24v8a8,8,0,0,0,16,0v-8h80v8a8,8,0,1,0,16,0v-8h24Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"176\",\n        height: \"176\",\n        rx: \"8\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"176\",\n        y1: \"24\",\n        x2: \"176\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"80\",\n        y1: \"24\",\n        x2: \"80\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"40\",\n        y1: \"88\",\n        x2: \"216\",\n        y2: \"88\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"128\",\n        x2: \"104\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"176\",\n        x2: \"104\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"176\",\n        height: \"176\",\n        rx: \"8\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"176\",\n        y1: \"24\",\n        x2: \"176\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"80\",\n        y1: \"24\",\n        x2: \"80\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"40\",\n        y1: \"88\",\n        x2: \"216\",\n        y2: \"88\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"128\",\n        x2: \"104\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"176\",\n        x2: \"104\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"176\",\n        height: \"176\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"176\",\n        y1: \"24\",\n        x2: \"176\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"80\",\n        y1: \"24\",\n        x2: \"80\",\n        y2: \"56\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"40\",\n        y1: \"88\",\n        x2: \"216\",\n        y2: \"88\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"128\",\n        x2: \"104\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"152\",\n        y1: \"176\",\n        x2: \"104\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar CalendarX = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nCalendarX.displayName = \"CalendarX\";\nexport default CalendarX;","map":{"version":3,"sources":["../../src/icons/CalendarX.tsx"],"names":["renderPathFor","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","d","opacity","console","CalendarX","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"152\"\n            y1=\"128\"\n            x2=\"104\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"176\"\n            x2=\"104\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"176\"\n            y1=\"20\"\n            x2=\"176\"\n            y2=\"40\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"80\"\n            y1=\"20\"\n            x2=\"80\"\n            y2=\"40\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"88\"\n            x2=\"216\"\n            y2=\"88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <path\n            d=\"M40,88H216V48a8,8,0,0,0-8-8H48a8,8,0,0,0-8,8Z\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"176\"\n            y1=\"24\"\n            x2=\"176\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"80\"\n            y1=\"24\"\n            x2=\"80\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"88\"\n            x2=\"216\"\n            y2=\"88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"128\"\n            x2=\"104\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"176\"\n            x2=\"104\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M207.99414,31.9971h-24v-8a8,8,0,1,0-16,0v8h-80v-8a8,8,0,0,0-16,0v8h-24a16.01583,16.01583,0,0,0-16,16v160a16.01582,16.01582,0,0,0,16,16h160a16.01581,16.01581,0,0,0,16-16v-160A16.01582,16.01582,0,0,0,207.99414,31.9971ZM157.65039,170.34085a7.99915,7.99915,0,1,1-11.3125,11.3125L127.99414,163.3096l-18.34375,18.34375a7.99915,7.99915,0,0,1-11.3125-11.3125l18.34375-18.34375L98.33789,133.65335a7.99915,7.99915,0,1,1,11.3125-11.3125l18.34375,18.34375,18.34375-18.34375a7.99915,7.99915,0,1,1,11.3125,11.3125L139.30664,151.9971ZM207.99414,79.9971h-160v-32h24v8a8,8,0,0,0,16,0v-8h80v8a8,8,0,1,0,16,0v-8h24Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"176\"\n            y1=\"24\"\n            x2=\"176\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"80\"\n            y1=\"24\"\n            x2=\"80\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"88\"\n            x2=\"216\"\n            y2=\"88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"128\"\n            x2=\"104\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"176\"\n            x2=\"104\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"176\"\n            y1=\"24\"\n            x2=\"176\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"80\"\n            y1=\"24\"\n            x2=\"80\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"88\"\n            x2=\"216\"\n            y2=\"88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"128\"\n            x2=\"104\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"176\"\n            x2=\"104\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"40\"\n            y=\"40\"\n            width=\"176\"\n            height=\"176\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"176\"\n            y1=\"24\"\n            x2=\"176\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"80\"\n            y1=\"24\"\n            x2=\"80\"\n            y2=\"56\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"40\"\n            y1=\"88\"\n            x2=\"216\"\n            y2=\"88\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"128\"\n            x2=\"104\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"152\"\n            y1=\"176\"\n            x2=\"104\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst CalendarX = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nCalendarX.displayName = \"CalendarX\";\n\nexport default CalendarX;\n"]},"metadata":{},"sourceType":"module"}