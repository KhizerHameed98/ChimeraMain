{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"60\",\n        height: \"60\",\n        rx: \"8\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"148\",\n        width: \"60\",\n        height: \"60\",\n        rx: \"8\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"148.00244\",\n        y: \"48\",\n        width: \"60\",\n        height: \"60\",\n        rx: \"8\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"148.00244\",\n        y1: \"148\",\n        x2: \"148.00244\",\n        y2: \"172\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"148.002 208 184.002 208 184.002 148\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"184.00244\",\n        y1: \"164\",\n        x2: \"208.00244\",\n        y2: \"164\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"144.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"144.00244\",\n        y1: \"144\",\n        x2: \"144.00244\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"144.002 208 176.002 208 176.002 144\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"176.00244\",\n        y1: \"160\",\n        x2: \"208.00244\",\n        y2: \"160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"208.00244\",\n        y1: \"192\",\n        x2: \"208.00244\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"rect\", {\n        x: \"40.00244\",\n        y: \"40\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"16\"\n      }), React.createElement(\"rect\", {\n        x: \"40.00244\",\n        y: \"136\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"16\"\n      }), React.createElement(\"rect\", {\n        x: \"136.00244\",\n        y: \"40\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M144.00244,184a8.00039,8.00039,0,0,0,8-8V144a8,8,0,0,0-16,0v32A8.00039,8.00039,0,0,0,144.00244,184Z\"\n      }), React.createElement(\"path\", {\n        d: \"M208.00244,152h-24v-8a8,8,0,0,0-16,0v56h-24a8,8,0,1,0,0,16h32a8.00039,8.00039,0,0,0,8-8V168h24a8,8,0,0,0,0-16Z\"\n      }), React.createElement(\"path\", {\n        d: \"M208.00244,184a8.00039,8.00039,0,0,0-8,8v16a8,8,0,0,0,16,0V192A8.00039,8.00039,0,0,0,208.00244,184Z\"\n      })));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"144.00244\",\n        y1: \"144\",\n        x2: \"144.00244\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"144.002 208 176.002 208 176.002 144\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"176.00244\",\n        y1: \"160\",\n        x2: \"208.00244\",\n        y2: \"160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"208.00244\",\n        y1: \"192\",\n        x2: \"208.00244\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"144.00244\",\n        y1: \"144\",\n        x2: \"144.00244\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"144.002 208 176.002 208 176.002 144\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"176.00244\",\n        y1: \"160\",\n        x2: \"208.00244\",\n        y2: \"160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"208.00244\",\n        y1: \"192\",\n        x2: \"208.00244\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48.00244\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144.00244\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"line\", {\n        x1: \"144.00244\",\n        y1: \"144\",\n        x2: \"144.00244\",\n        y2: \"176\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"144.002 208 176.002 208 176.002 144\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"176.00244\",\n        y1: \"160\",\n        x2: \"208.00244\",\n        y2: \"160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"208.00244\",\n        y1: \"192\",\n        x2: \"208.00244\",\n        y2: \"208\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar QrCode = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nQrCode.displayName = \"QrCode\";\nexport default QrCode;","map":{"version":3,"sources":["../../src/icons/QrCode.tsx"],"names":["renderPathFor","x","y","width","height","rx","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","x1","y1","x2","y2","points","opacity","d","console","QrCode","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"148\"\n            width=\"60\"\n            height=\"60\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"148.00244\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"148.00244\"\n            y1=\"148\"\n            x2=\"148.00244\"\n            y2=\"172\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"148.002 208 184.002 208 184.002 148\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"184.00244\"\n            y1=\"164\"\n            x2=\"208.00244\"\n            y2=\"164\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"144.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            opacity=\"0.2\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"144.00244\"\n            y1=\"144\"\n            x2=\"144.00244\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"144.002 208 176.002 208 176.002 144\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"176.00244\"\n            y1=\"160\"\n            x2=\"208.00244\"\n            y2=\"160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"208.00244\"\n            y1=\"192\"\n            x2=\"208.00244\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <rect x=\"40.00244\" y=\"40\" width=\"80\" height=\"80\" rx=\"16\" />\n            <rect x=\"40.00244\" y=\"136\" width=\"80\" height=\"80\" rx=\"16\" />\n            <rect x=\"136.00244\" y=\"40\" width=\"80\" height=\"80\" rx=\"16\" />\n            <path d=\"M144.00244,184a8.00039,8.00039,0,0,0,8-8V144a8,8,0,0,0-16,0v32A8.00039,8.00039,0,0,0,144.00244,184Z\" />\n            <path d=\"M208.00244,152h-24v-8a8,8,0,0,0-16,0v56h-24a8,8,0,1,0,0,16h32a8.00039,8.00039,0,0,0,8-8V168h24a8,8,0,0,0,0-16Z\" />\n            <path d=\"M208.00244,184a8.00039,8.00039,0,0,0-8,8v16a8,8,0,0,0,16,0V192A8.00039,8.00039,0,0,0,208.00244,184Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"144.00244\"\n            y1=\"144\"\n            x2=\"144.00244\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"144.002 208 176.002 208 176.002 144\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"176.00244\"\n            y1=\"160\"\n            x2=\"208.00244\"\n            y2=\"160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"208.00244\"\n            y1=\"192\"\n            x2=\"208.00244\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"144.00244\"\n            y1=\"144\"\n            x2=\"144.00244\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"144.002 208 176.002 208 176.002 144\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"176.00244\"\n            y1=\"160\"\n            x2=\"208.00244\"\n            y2=\"160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"208.00244\"\n            y1=\"192\"\n            x2=\"208.00244\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"48.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48.00244\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144.00244\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <line\n            x1=\"144.00244\"\n            y1=\"144\"\n            x2=\"144.00244\"\n            y2=\"176\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"144.002 208 176.002 208 176.002 144\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"176.00244\"\n            y1=\"160\"\n            x2=\"208.00244\"\n            y2=\"160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"208.00244\"\n            y1=\"192\"\n            x2=\"208.00244\"\n            y2=\"208\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst QrCode = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nQrCode.displayName = \"QrCode\";\n\nexport default QrCode;\n"]},"metadata":{},"sourceType":"module"}