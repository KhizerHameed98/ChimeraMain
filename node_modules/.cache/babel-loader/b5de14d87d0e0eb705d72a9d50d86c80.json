{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"128\",\n        y1: \"40\",\n        x2: \"128\",\n        y2: \"216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"88\",\n        y1: \"128\",\n        x2: \"12\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"44 96 12 128 44 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"line\", {\n        x1: \"168\",\n        y1: \"128\",\n        x2: \"244\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"212 160 244 128 212 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"128\",\n        y1: \"40\",\n        x2: \"128\",\n        y2: \"216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"128\",\n        x2: \"16\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"48 160 16 128 48 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"160\",\n        y1: \"128\",\n        x2: \"240\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"208 96 240 128 208 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M136,40V216a8,8,0,0,1-16,0V40a8,8,0,0,1,16,0ZM96,120H35.314l18.34327-18.34277A8.00053,8.00053,0,0,0,42.34277,90.34277l-32,32c-.05664.0564-.10449.11792-.15869.17554-.12549.13281-.251.26538-.36719.40649-.0913.11084-.17138.22706-.25537.34156-.07031.0957-.14453.188-.21093.28686-.085.12647-.15918.25782-.23584.38819-.05567.09423-.11524.186-.167.283-.06933.12915-.12841.262-.18994.39379-.04931.10547-.102.20874-.147.31665-.05225.12647-.09522.25562-.14063.38428-.042.11817-.0874.23462-.124.35523-.03906.1289-.06787.25976-.10058.39013-.03077.12305-.06543.24414-.09034.36939-.02978.15137-.04834.30444-.06933.457-.01465.106-.03516.21-.0459.31714a8.02276,8.02276,0,0,0,0,1.584c.01074.10718.03125.21118.0459.31714.021.15259.03955.30566.06933.457.02491.12525.05957.24634.09034.36939.03271.13037.06152.26123.10058.39013.03662.12061.082.23706.124.35523.04541.12866.08838.25781.14063.38428.04492.10791.09766.21118.147.31665.06153.13183.12061.26464.18994.39379.05176.09693.11133.18873.167.283.07666.13037.15087.26172.23584.38819.0664.09887.14062.19116.21093.28686.084.1145.16407.23072.25537.34156.11622.14111.2417.27368.36719.40649.0542.05762.10205.11914.15869.17554l32,32a8.00053,8.00053,0,0,0,11.31446-11.31446L35.314,136H96a8,8,0,0,0,0-16Zm150.18311,13.0752c.0913-.11084.17138-.22706.25537-.34156.07031-.0957.14453-.188.21093-.28686.085-.12647.15918-.25782.23584-.38819.05567-.09423.11524-.186.167-.283.06933-.12915.12841-.262.18994-.39379.04931-.10547.10205-.20874.147-.31665.05225-.12647.09522-.25562.14063-.38428.042-.11817.0874-.23462.124-.35523.03906-.1289.06787-.25976.10058-.39013.03077-.12305.06543-.24414.09034-.36939.02978-.15137.04834-.30444.06933-.457.01465-.106.03516-.21.0459-.31714a8.02276,8.02276,0,0,0,0-1.584c-.01074-.10718-.03125-.21118-.0459-.31714-.021-.15259-.03955-.30566-.06933-.457-.02491-.12525-.05957-.24634-.09034-.36939-.03271-.13037-.06152-.26123-.10058-.39013-.03662-.12061-.082-.23706-.124-.35523-.04541-.12866-.08838-.25781-.14063-.38428-.04492-.10791-.09766-.21118-.147-.31665-.06153-.13183-.12061-.26464-.18994-.39379-.05176-.09693-.11133-.18873-.167-.283-.07666-.13037-.15087-.26172-.23584-.38819-.0664-.09887-.14062-.19116-.21093-.28686-.084-.1145-.16407-.23072-.25537-.34156-.11622-.14111-.2417-.27368-.36719-.40649-.0542-.05762-.10205-.11914-.15869-.17554l-32-32a8.00053,8.00053,0,0,0-11.31446,11.31446L220.686,120H160a8,8,0,0,0,0,16h60.686l-18.34327,18.34277a8.00053,8.00053,0,0,0,11.31446,11.31446l32-32c.05664-.0564.10449-.11792.15869-.17554C245.94141,133.34888,246.06689,133.21631,246.18311,133.0752Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"128\",\n        y1: \"40\",\n        x2: \"128\",\n        y2: \"216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"128\",\n        x2: \"16\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"48 160 16 128 48 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"line\", {\n        x1: \"160\",\n        y1: \"128\",\n        x2: \"240\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"208 96 240 128 208 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"128\",\n        y1: \"40\",\n        x2: \"128\",\n        y2: \"216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"128\",\n        x2: \"16\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"48 160 16 128 48 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"line\", {\n        x1: \"160\",\n        y1: \"128\",\n        x2: \"240\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"208 96 240 128 208 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"128\",\n        y1: \"40\",\n        x2: \"128\",\n        y2: \"216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"96\",\n        y1: \"128\",\n        x2: \"16\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"48 160 16 128 48 96\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"line\", {\n        x1: \"160\",\n        y1: \"128\",\n        x2: \"240\",\n        y2: \"128\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"208 96 240 128 208 160\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar ArrowsOutLineHorizontal = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nArrowsOutLineHorizontal.displayName = \"ArrowsOutLineHorizontal\";\nexport default ArrowsOutLineHorizontal;","map":{"version":3,"sources":["../../src/icons/ArrowsOutLineHorizontal.tsx"],"names":["renderPathFor","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","points","d","console","ArrowsOutLineHorizontal","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"40\"\n            x2=\"128\"\n            y2=\"216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"88\"\n            y1=\"128\"\n            x2=\"12\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"44 96 12 128 44 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <line\n            x1=\"168\"\n            y1=\"128\"\n            x2=\"244\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"212 160 244 128 212 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"40\"\n            x2=\"128\"\n            y2=\"216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"128\"\n            x2=\"16\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"48 160 16 128 48 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"128\"\n            x2=\"240\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"208 96 240 128 208 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M136,40V216a8,8,0,0,1-16,0V40a8,8,0,0,1,16,0ZM96,120H35.314l18.34327-18.34277A8.00053,8.00053,0,0,0,42.34277,90.34277l-32,32c-.05664.0564-.10449.11792-.15869.17554-.12549.13281-.251.26538-.36719.40649-.0913.11084-.17138.22706-.25537.34156-.07031.0957-.14453.188-.21093.28686-.085.12647-.15918.25782-.23584.38819-.05567.09423-.11524.186-.167.283-.06933.12915-.12841.262-.18994.39379-.04931.10547-.102.20874-.147.31665-.05225.12647-.09522.25562-.14063.38428-.042.11817-.0874.23462-.124.35523-.03906.1289-.06787.25976-.10058.39013-.03077.12305-.06543.24414-.09034.36939-.02978.15137-.04834.30444-.06933.457-.01465.106-.03516.21-.0459.31714a8.02276,8.02276,0,0,0,0,1.584c.01074.10718.03125.21118.0459.31714.021.15259.03955.30566.06933.457.02491.12525.05957.24634.09034.36939.03271.13037.06152.26123.10058.39013.03662.12061.082.23706.124.35523.04541.12866.08838.25781.14063.38428.04492.10791.09766.21118.147.31665.06153.13183.12061.26464.18994.39379.05176.09693.11133.18873.167.283.07666.13037.15087.26172.23584.38819.0664.09887.14062.19116.21093.28686.084.1145.16407.23072.25537.34156.11622.14111.2417.27368.36719.40649.0542.05762.10205.11914.15869.17554l32,32a8.00053,8.00053,0,0,0,11.31446-11.31446L35.314,136H96a8,8,0,0,0,0-16Zm150.18311,13.0752c.0913-.11084.17138-.22706.25537-.34156.07031-.0957.14453-.188.21093-.28686.085-.12647.15918-.25782.23584-.38819.05567-.09423.11524-.186.167-.283.06933-.12915.12841-.262.18994-.39379.04931-.10547.10205-.20874.147-.31665.05225-.12647.09522-.25562.14063-.38428.042-.11817.0874-.23462.124-.35523.03906-.1289.06787-.25976.10058-.39013.03077-.12305.06543-.24414.09034-.36939.02978-.15137.04834-.30444.06933-.457.01465-.106.03516-.21.0459-.31714a8.02276,8.02276,0,0,0,0-1.584c-.01074-.10718-.03125-.21118-.0459-.31714-.021-.15259-.03955-.30566-.06933-.457-.02491-.12525-.05957-.24634-.09034-.36939-.03271-.13037-.06152-.26123-.10058-.39013-.03662-.12061-.082-.23706-.124-.35523-.04541-.12866-.08838-.25781-.14063-.38428-.04492-.10791-.09766-.21118-.147-.31665-.06153-.13183-.12061-.26464-.18994-.39379-.05176-.09693-.11133-.18873-.167-.283-.07666-.13037-.15087-.26172-.23584-.38819-.0664-.09887-.14062-.19116-.21093-.28686-.084-.1145-.16407-.23072-.25537-.34156-.11622-.14111-.2417-.27368-.36719-.40649-.0542-.05762-.10205-.11914-.15869-.17554l-32-32a8.00053,8.00053,0,0,0-11.31446,11.31446L220.686,120H160a8,8,0,0,0,0,16h60.686l-18.34327,18.34277a8.00053,8.00053,0,0,0,11.31446,11.31446l32-32c.05664-.0564.10449-.11792.15869-.17554C245.94141,133.34888,246.06689,133.21631,246.18311,133.0752Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"40\"\n            x2=\"128\"\n            y2=\"216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"128\"\n            x2=\"16\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"48 160 16 128 48 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"128\"\n            x2=\"240\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"208 96 240 128 208 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"40\"\n            x2=\"128\"\n            y2=\"216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"128\"\n            x2=\"16\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"48 160 16 128 48 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"128\"\n            x2=\"240\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"208 96 240 128 208 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"128\"\n            y1=\"40\"\n            x2=\"128\"\n            y2=\"216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"96\"\n            y1=\"128\"\n            x2=\"16\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"48 160 16 128 48 96\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <line\n            x1=\"160\"\n            y1=\"128\"\n            x2=\"240\"\n            y2=\"128\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"208 96 240 128 208 160\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowsOutLineHorizontal = forwardRef<SVGSVGElement, IconProps>(\n  (props, ref) => {\n    const { color, size, weight, mirrored, children, ...restProps } = props;\n    const {\n      color: contextColor,\n      size: contextSize,\n      weight: contextWeight,\n      mirrored: contextMirrored,\n      ...restContext\n    } = useContext(IconContext);\n\n    return (\n      <svg\n        ref={ref}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={size ?? contextSize}\n        height={size ?? contextSize}\n        fill={color ?? contextColor}\n        viewBox=\"0 0 256 256\"\n        transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n        {...restContext}\n        {...restProps}\n      >\n        {children}\n        <rect width=\"256\" height=\"256\" fill=\"none\" />\n        {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n      </svg>\n    );\n  }\n);\n\nArrowsOutLineHorizontal.displayName = \"ArrowsOutLineHorizontal\";\n\nexport default ArrowsOutLineHorizontal;\n"]},"metadata":{},"sourceType":"module"}