{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"216.00488\",\n        y1: \"216.00586\",\n        x2: \"40.00488\",\n        y2: \"216.00586\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"rect\", {\n        x: \"122\",\n        y: \"98\",\n        width: \"104\",\n        height: \"52\",\n        rx: \"8\",\n        transform: \"translate(50 298) rotate(-90)\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"52\",\n        height: \"144\",\n        rx: \"8\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"116\",\n        y: \"100\",\n        width: \"112\",\n        height: \"56\",\n        rx: \"8\",\n        transform: \"translate(44 300) rotate(-90)\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"56\",\n        height: \"152\",\n        rx: \"8\",\n        opacity: \"0.2\"\n      }), React.createElement(\"line\", {\n        x1: \"216.00488\",\n        y1: \"216.00586\",\n        x2: \"40.00488\",\n        y2: \"216.00586\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"rect\", {\n        x: \"116\",\n        y: \"100\",\n        width: \"112\",\n        height: \"56\",\n        rx: \"8\",\n        transform: \"translate(44 300) rotate(-90)\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"56\",\n        height: \"152\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M224.00488,216.00586a8.00008,8.00008,0,0,1-8,8h-176a8,8,0,1,1,0-16h176A8.00008,8.00008,0,0,1,224.00488,216.00586ZM152,192h40a16.01833,16.01833,0,0,0,16-16V80a16.01833,16.01833,0,0,0-16-16H152a16.01833,16.01833,0,0,0-16,16v96A16.01833,16.01833,0,0,0,152,192Zm-88,0h40a16.01833,16.01833,0,0,0,16-16V40a16.01833,16.01833,0,0,0-16-16H64A16.01833,16.01833,0,0,0,48,40V176A16.01833,16.01833,0,0,0,64,192Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"216.00488\",\n        y1: \"216.00586\",\n        x2: \"40.00488\",\n        y2: \"216.00586\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"rect\", {\n        x: \"116\",\n        y: \"100\",\n        width: \"112\",\n        height: \"56\",\n        rx: \"8\",\n        transform: \"translate(44 300) rotate(-90)\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"56\",\n        height: \"152\",\n        rx: \"8\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"216.00488\",\n        y1: \"216.00586\",\n        x2: \"40.00488\",\n        y2: \"216.00586\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"rect\", {\n        x: \"116\",\n        y: \"100\",\n        width: \"112\",\n        height: \"56\",\n        rx: \"8\",\n        transform: \"translate(44 300) rotate(-90)\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"56\",\n        height: \"152\",\n        rx: \"8\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"line\", {\n        x1: \"216.00488\",\n        y1: \"216.00586\",\n        x2: \"40.00488\",\n        y2: \"216.00586\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"rect\", {\n        x: \"116\",\n        y: \"100\",\n        width: \"112\",\n        height: \"56\",\n        rx: \"8\",\n        transform: \"translate(44 300) rotate(-90)\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"56\",\n        y: \"32\",\n        width: \"56\",\n        height: \"152\",\n        rx: \"8\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar AlignBottom = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nAlignBottom.displayName = \"AlignBottom\";\nexport default AlignBottom;","map":{"version":3,"sources":["../../src/icons/AlignBottom.tsx"],"names":["renderPathFor","x1","y1","x2","y2","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","x","y","width","height","rx","transform","opacity","d","console","AlignBottom","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","viewBox","undefined"],"mappings":";;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,MAAA,EAAA,KAAA,EAAA;AAIpB,UAAA,MAAA;AACE,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,EAAE,EAAC,WADL;AAEEC,QAAAA,EAAE,EAAC,WAFL;AAGEC,QAAAA,EAAE,EAAC,UAHL;AAIEC,QAAAA,EAAE,EAAC,WAJL;AAKEC,QAAAA,IAAI,EAAC,MALP;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,WAAW,EAAC;AATd,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEN,QAAAA,WAAW,EAAC,IAPd;AAQEJ,QAAAA,MAAM,EAAEC,KARV;AASEC,QAAAA,aAAa,EAAC,OAThB;AAUEC,QAAAA,cAAc,EAAC,OAVjB;AAWEJ,QAAAA,IAAI,EAAC;AAXP,OAAA,CAZF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,KAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEL,QAAAA,WAAW,EAAC,IANd;AAOEJ,QAAAA,MAAM,EAAEC,KAPV;AAQEC,QAAAA,aAAa,EAAC,OARhB;AASEC,QAAAA,cAAc,EAAC,OATjB;AAUEJ,QAAAA,IAAI,EAAC;AAVP,OAAA,CAzBF,CADF;;AAwCF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEC,QAAAA,OAAO,EAAC;AAPV,OAAA,CADF,EAUE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMN,QAAAA,CAAC,EAAC,IAAR;AAAaC,QAAAA,CAAC,EAAC,IAAf;AAAoBC,QAAAA,KAAK,EAAC,IAA1B;AAA+BC,QAAAA,MAAM,EAAC,KAAtC;AAA4CC,QAAAA,EAAE,EAAC,GAA/C;AAAmDE,QAAAA,OAAO,EAAC;AAA3D,OAAA,CAVF,EAWE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEhB,QAAAA,EAAE,EAAC,WADL;AAEEC,QAAAA,EAAE,EAAC,WAFL;AAGEC,QAAAA,EAAE,EAAC,UAHL;AAIEC,QAAAA,EAAE,EAAC,WAJL;AAKEC,QAAAA,IAAI,EAAC,MALP;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,WAAW,EAAC;AATd,OAAA,CAXF,EAsBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEN,QAAAA,WAAW,EAAC,IAPd;AAQEJ,QAAAA,MAAM,EAAEC,KARV;AASEC,QAAAA,aAAa,EAAC,OAThB;AAUEC,QAAAA,cAAc,EAAC,OAVjB;AAWEJ,QAAAA,IAAI,EAAC;AAXP,OAAA,CAtBF,EAmCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,KAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEL,QAAAA,WAAW,EAAC,IANd;AAOEJ,QAAAA,MAAM,EAAEC,KAPV;AAQEC,QAAAA,aAAa,EAAC,OARhB;AASEC,QAAAA,cAAc,EAAC,OATjB;AAUEJ,QAAAA,IAAI,EAAC;AAVP,OAAA,CAnCF,CADF;;AAkDF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMa,QAAAA,CAAC,EAAC;AAAR,OAAA,CADF,CADF;;AAKF,SAAA,OAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEjB,QAAAA,EAAE,EAAC,WADL;AAEEC,QAAAA,EAAE,EAAC,WAFL;AAGEC,QAAAA,EAAE,EAAC,UAHL;AAIEC,QAAAA,EAAE,EAAC,WAJL;AAKEC,QAAAA,IAAI,EAAC,MALP;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,WAAW,EAAC;AATd,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEN,QAAAA,WAAW,EAAC,IAPd;AAQEJ,QAAAA,MAAM,EAAEC,KARV;AASEC,QAAAA,aAAa,EAAC,OAThB;AAUEC,QAAAA,cAAc,EAAC,OAVjB;AAWEJ,QAAAA,IAAI,EAAC;AAXP,OAAA,CAZF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,KAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEL,QAAAA,WAAW,EAAC,IANd;AAOEJ,QAAAA,MAAM,EAAEC,KAPV;AAQEC,QAAAA,aAAa,EAAC,OARhB;AASEC,QAAAA,cAAc,EAAC,OATjB;AAUEJ,QAAAA,IAAI,EAAC;AAVP,OAAA,CAzBF,CADF;;AAwCF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEJ,QAAAA,EAAE,EAAC,WADL;AAEEC,QAAAA,EAAE,EAAC,WAFL;AAGEC,QAAAA,EAAE,EAAC,UAHL;AAIEC,QAAAA,EAAE,EAAC,WAJL;AAKEC,QAAAA,IAAI,EAAC,MALP;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,WAAW,EAAC;AATd,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEN,QAAAA,WAAW,EAAC,GAPd;AAQEJ,QAAAA,MAAM,EAAEC,KARV;AASEC,QAAAA,aAAa,EAAC,OAThB;AAUEC,QAAAA,cAAc,EAAC,OAVjB;AAWEJ,QAAAA,IAAI,EAAC;AAXP,OAAA,CAZF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,KAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEL,QAAAA,WAAW,EAAC,GANd;AAOEJ,QAAAA,MAAM,EAAEC,KAPV;AAQEC,QAAAA,aAAa,EAAC,OARhB;AASEC,QAAAA,cAAc,EAAC,OATjB;AAUEJ,QAAAA,IAAI,EAAC;AAVP,OAAA,CAzBF,CADF;;AAwCF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEJ,QAAAA,EAAE,EAAC,WADL;AAEEC,QAAAA,EAAE,EAAC,WAFL;AAGEC,QAAAA,EAAE,EAAC,UAHL;AAIEC,QAAAA,EAAE,EAAC,WAJL;AAKEC,QAAAA,IAAI,EAAC,MALP;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,WAAW,EAAC;AATd,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,KAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEC,QAAAA,SAAS,EAAC,+BANZ;AAOEN,QAAAA,WAAW,EAAC,IAPd;AAQEJ,QAAAA,MAAM,EAAEC,KARV;AASEC,QAAAA,aAAa,EAAC,OAThB;AAUEC,QAAAA,cAAc,EAAC,OAVjB;AAWEJ,QAAAA,IAAI,EAAC;AAXP,OAAA,CAZF,EAyBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEM,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,KAJT;AAKEC,QAAAA,EAAE,EAAC,GALL;AAMEL,QAAAA,WAAW,EAAC,IANd;AAOEJ,QAAAA,MAAM,EAAEC,KAPV;AAQEC,QAAAA,aAAa,EAAC,OARhB;AASEC,QAAAA,cAAc,EAAC,OATjB;AAUEJ,QAAAA,IAAI,EAAC;AAVP,OAAA,CAzBF,CADF;;AAwCF;AACEc,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,gGAAAA;AAGA,aAAA,IAAA;AAlOJ;AAJF,CAAA;;AA0OA,IAAMC,WAAW,GAAA,aAAGC,UAAU,CAA2B,UAAA,KAAA,EAAA,GAAA,EAAA;MAC/Cd,KAAAA,GAA0DoB,KAAAA,CAA1DpB,K;MAAOe,IAAAA,GAAmDK,KAAAA,CAAnDL,I;MAAMC,MAAAA,GAA6CI,KAAAA,CAA7CJ,M;MAAQC,QAAAA,GAAqCG,KAAAA,CAArCH,Q;MAAUC,QAAAA,GAA2BE,KAAAA,CAA3BF,Q;MAAaC,SAAAA,GAAAA,6BAAAA,CAAcC,KAAdD,EAAcC,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,EAAAA,UAAAA,CAAdD,C;;oBAOhDO,UAAU,CAAA,WAAA,C;MALLL,YAAAA,GAAAA,WAAAA,CAAPrB,K;MACMsB,WAAAA,GAAAA,WAAAA,CAANP,I;MACQQ,aAAAA,GAAAA,WAAAA,CAARP,M;MACUQ,eAAAA,GAAAA,WAAAA,CAAVP,Q;MACGQ,WAAAA,GAAAA,6BAAAA,CAAAA,WAAAA,EAAAA,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,CAAAA,C;;AAGL,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEE,IAAAA,GAAG,EAAEA,GADP;AAEEC,IAAAA,KAAK,EAAC,4BAFR;AAGEtB,IAAAA,KAAK,EAAES,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAHjB;AAIEf,IAAAA,MAAM,EAAEQ,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAJlB;AAKExB,IAAAA,IAAI,EAAEE,KAAF,IAAA,IAAEA,GAAF,KAAEA,GAASqB,YALjB;AAMEQ,IAAAA,OAAO,EAAC,aANV;AAOEpB,IAAAA,SAAS,EAAEQ,QAAQ,IAARA,eAAAA,GAAAA,cAAAA,GAA+Ca;AAP5D,GAAA,EAQML,WARN,EAAA,SAAA,CAAA,EAAA,QAAA,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMnB,IAAAA,KAAK,EAAC,KAAZ;AAAkBC,IAAAA,MAAM,EAAC,KAAzB;AAA+BT,IAAAA,IAAI,EAAC;AAApC,GAAA,CAZF,EAaGL,aAAa,CAACuB,MAAD,IAAA,IAACA,GAAD,MAACA,GAAD,aAAA,EAA0BhB,KAA1B,IAAA,IAA0BA,GAA1B,KAA0BA,GAd5C,YAckB,CAbhB,CADF;AAVF,CAA8B,CAA9B;AA6BAa,WAAW,CAAXA,WAAAA,GAAAA,aAAAA","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <line\n            x1=\"216.00488\"\n            y1=\"216.00586\"\n            x2=\"40.00488\"\n            y2=\"216.00586\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <rect\n            x=\"122\"\n            y=\"98\"\n            width=\"104\"\n            height=\"52\"\n            rx=\"8\"\n            transform=\"translate(50 298) rotate(-90)\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"56\"\n            y=\"32\"\n            width=\"52\"\n            height=\"144\"\n            rx=\"8\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect\n            x=\"116\"\n            y=\"100\"\n            width=\"112\"\n            height=\"56\"\n            rx=\"8\"\n            transform=\"translate(44 300) rotate(-90)\"\n            opacity=\"0.2\"\n          />\n          <rect x=\"56\" y=\"32\" width=\"56\" height=\"152\" rx=\"8\" opacity=\"0.2\" />\n          <line\n            x1=\"216.00488\"\n            y1=\"216.00586\"\n            x2=\"40.00488\"\n            y2=\"216.00586\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"116\"\n            y=\"100\"\n            width=\"112\"\n            height=\"56\"\n            rx=\"8\"\n            transform=\"translate(44 300) rotate(-90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"56\"\n            y=\"32\"\n            width=\"56\"\n            height=\"152\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M224.00488,216.00586a8.00008,8.00008,0,0,1-8,8h-176a8,8,0,1,1,0-16h176A8.00008,8.00008,0,0,1,224.00488,216.00586ZM152,192h40a16.01833,16.01833,0,0,0,16-16V80a16.01833,16.01833,0,0,0-16-16H152a16.01833,16.01833,0,0,0-16,16v96A16.01833,16.01833,0,0,0,152,192Zm-88,0h40a16.01833,16.01833,0,0,0,16-16V40a16.01833,16.01833,0,0,0-16-16H64A16.01833,16.01833,0,0,0,48,40V176A16.01833,16.01833,0,0,0,64,192Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <line\n            x1=\"216.00488\"\n            y1=\"216.00586\"\n            x2=\"40.00488\"\n            y2=\"216.00586\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <rect\n            x=\"116\"\n            y=\"100\"\n            width=\"112\"\n            height=\"56\"\n            rx=\"8\"\n            transform=\"translate(44 300) rotate(-90)\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"56\"\n            y=\"32\"\n            width=\"56\"\n            height=\"152\"\n            rx=\"8\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <line\n            x1=\"216.00488\"\n            y1=\"216.00586\"\n            x2=\"40.00488\"\n            y2=\"216.00586\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <rect\n            x=\"116\"\n            y=\"100\"\n            width=\"112\"\n            height=\"56\"\n            rx=\"8\"\n            transform=\"translate(44 300) rotate(-90)\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"56\"\n            y=\"32\"\n            width=\"56\"\n            height=\"152\"\n            rx=\"8\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <line\n            x1=\"216.00488\"\n            y1=\"216.00586\"\n            x2=\"40.00488\"\n            y2=\"216.00586\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <rect\n            x=\"116\"\n            y=\"100\"\n            width=\"112\"\n            height=\"56\"\n            rx=\"8\"\n            transform=\"translate(44 300) rotate(-90)\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"56\"\n            y=\"32\"\n            width=\"56\"\n            height=\"152\"\n            rx=\"8\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst AlignBottom = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nAlignBottom.displayName = \"AlignBottom\";\n\nexport default AlignBottom;\n"]},"metadata":{},"sourceType":"module"}