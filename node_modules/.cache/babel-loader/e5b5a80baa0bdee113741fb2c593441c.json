{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"176.167 99.716 224.167 99.716 224.167 51.716\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"polyline\", {\n        points: \"79.833 156.284 31.833 156.284 31.833 204.284\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"176.167 99.716 224.167 99.716 224.167 51.716\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"79.833 156.284 31.833 156.284 31.833 204.284\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"path\", {\n        d: \"M225.73047,107.56073c.13257-.02631.26123-.06274.3916-.09558.123-.03088.24658-.05792.36816-.09473.12647-.03833.2483-.08575.37183-.13006.123-.04395.24683-.08454.36792-.13465.11328-.047.22168-.10217.332-.15411.127-.05945.2544-.11591.37842-.18237.10229-.05475.19922-.11725.29858-.17627.12525-.07416.25147-.14521.37329-.22681.10352-.0694.20069-.14709.30079-.22113.10986-.08124.22192-.158.32837-.24554.14379-.118.27856-.246.41357-.37366.05542-.05243.11475-.09845.16919-.15277.0564-.0564.10425-.11786.15869-.17554.12524-.13287.25122-.26532.36719-.40649.09106-.11072.17114-.22718.25537-.34156.07056-.09564.14477-.18805.21094-.28686.085-.12659.15893-.25781.23584-.38806.05566-.09443.11523-.18622.16723-.28308.06909-.12916.12818-.26185.1897-.3938.04932-.10547.10205-.20874.147-.31665.05225-.12653.095-.25568.14063-.38428.042-.11817.08764-.2345.12426-.35517.03907-.1289.06788-.25982.10035-.39019.03051-.123.06518-.24414.09008-.36933.03-.15149.04859-.30444.06983-.45715.01465-.1059.03516-.2099.04565-.31714a7.97366,7.97366,0,0,0,.04-.79706V51.71582a8,8,0,0,0-16,0V80.40137L195.88281,60.11719a96.11137,96.11137,0,0,0-135.76562,0A8.00052,8.00052,0,0,0,71.43164,71.43164a80.08769,80.08769,0,0,1,113.13672,0l20.28418,20.28418H176.167a8,8,0,0,0,0,16h48c.26367,0,.5271-.014.78955-.03992.11817-.01159.23267-.03369.34912-.05035C225.44751,107.60529,225.5896,107.58868,225.73047,107.56073Z\"\n      }), React.createElement(\"path\", {\n        d: \"M184.56836,184.56836a80.08769,80.08769,0,0,1-113.13672,0L51.14746,164.28418H79.833a8,8,0,0,0,0-16h-48c-.05982,0-.11743.00763-.177.00891-.20264.00446-.40528.01093-.60718.0307-.13819.01343-.27246.03851-.40845.0589-.12207.01831-.24487.03186-.36621.05591-.14526.02869-.28613.06811-.42847.10455-.11035.02826-.22168.05219-.3313.08521-.13549.041-.2666.09155-.39917.13952-.11425.0412-.22924.07862-.34179.12519-.11963.04962-.23462.10772-.35132.1629-.12061.05688-.24219.11047-.36035.17371-.10645.057-.20752.12194-.311.18359-.12134.07214-.24389.141-.36206.22009-.1062.071-.20581.15045-.3081.22638-.10767.07965-.21729.15473-.32178.24048-.14478.119-.28076.248-.417.37671-.05445.05151-.11255.09668-.166.15-.0564.0564-.10425.11786-.15869.17554-.12524.13287-.25122.26532-.36719.40649-.09106.11072-.17114.22718-.25537.34156-.07056.09564-.14477.188-.21094.28686-.085.12659-.15893.25781-.23584.38806-.05566.09443-.11523.18622-.16723.28308-.06909.12916-.12818.26185-.1897.3938-.04932.10547-.10205.20874-.147.31665-.05225.12653-.095.25568-.14063.38428-.042.11817-.08764.2345-.12426.35517-.03907.1289-.06788.25982-.10035.39019-.03051.123-.06518.24414-.09008.36933-.03.15149-.04859.30444-.06983.45715-.01465.1059-.03516.2099-.04565.31714a7.97366,7.97366,0,0,0-.04.79706v47.99487a8,8,0,0,0,16,0V175.59863l20.28418,20.28418a96.11136,96.11136,0,0,0,135.76562,0,8.00052,8.00052,0,0,0-11.31445-11.31445Z\"\n      })));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"176.167 99.716 224.167 99.716 224.167 51.716\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"polyline\", {\n        points: \"79.833 156.284 31.833 156.284 31.833 204.284\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"176.167 99.716 224.167 99.716 224.167 51.716\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"polyline\", {\n        points: \"79.833 156.284 31.833 156.284 31.833 204.284\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"176.167 99.716 224.167 99.716 224.167 51.716\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"polyline\", {\n        points: \"79.833 156.284 31.833 156.284 31.833 204.284\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar ArrowsClockwise = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nArrowsClockwise.displayName = \"ArrowsClockwise\";\nexport default ArrowsClockwise;","map":{"version":3,"sources":["../../src/icons/ArrowsClockwise.tsx"],"names":["renderPathFor","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","console","ArrowsClockwise","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <polyline\n            points=\"176.167 99.716 224.167 99.716 224.167 51.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <polyline\n            points=\"79.833 156.284 31.833 156.284 31.833 204.284\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <polyline\n            points=\"176.167 99.716 224.167 99.716 224.167 51.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"79.833 156.284 31.833 156.284 31.833 204.284\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <path d=\"M225.73047,107.56073c.13257-.02631.26123-.06274.3916-.09558.123-.03088.24658-.05792.36816-.09473.12647-.03833.2483-.08575.37183-.13006.123-.04395.24683-.08454.36792-.13465.11328-.047.22168-.10217.332-.15411.127-.05945.2544-.11591.37842-.18237.10229-.05475.19922-.11725.29858-.17627.12525-.07416.25147-.14521.37329-.22681.10352-.0694.20069-.14709.30079-.22113.10986-.08124.22192-.158.32837-.24554.14379-.118.27856-.246.41357-.37366.05542-.05243.11475-.09845.16919-.15277.0564-.0564.10425-.11786.15869-.17554.12524-.13287.25122-.26532.36719-.40649.09106-.11072.17114-.22718.25537-.34156.07056-.09564.14477-.18805.21094-.28686.085-.12659.15893-.25781.23584-.38806.05566-.09443.11523-.18622.16723-.28308.06909-.12916.12818-.26185.1897-.3938.04932-.10547.10205-.20874.147-.31665.05225-.12653.095-.25568.14063-.38428.042-.11817.08764-.2345.12426-.35517.03907-.1289.06788-.25982.10035-.39019.03051-.123.06518-.24414.09008-.36933.03-.15149.04859-.30444.06983-.45715.01465-.1059.03516-.2099.04565-.31714a7.97366,7.97366,0,0,0,.04-.79706V51.71582a8,8,0,0,0-16,0V80.40137L195.88281,60.11719a96.11137,96.11137,0,0,0-135.76562,0A8.00052,8.00052,0,0,0,71.43164,71.43164a80.08769,80.08769,0,0,1,113.13672,0l20.28418,20.28418H176.167a8,8,0,0,0,0,16h48c.26367,0,.5271-.014.78955-.03992.11817-.01159.23267-.03369.34912-.05035C225.44751,107.60529,225.5896,107.58868,225.73047,107.56073Z\" />\n            <path d=\"M184.56836,184.56836a80.08769,80.08769,0,0,1-113.13672,0L51.14746,164.28418H79.833a8,8,0,0,0,0-16h-48c-.05982,0-.11743.00763-.177.00891-.20264.00446-.40528.01093-.60718.0307-.13819.01343-.27246.03851-.40845.0589-.12207.01831-.24487.03186-.36621.05591-.14526.02869-.28613.06811-.42847.10455-.11035.02826-.22168.05219-.3313.08521-.13549.041-.2666.09155-.39917.13952-.11425.0412-.22924.07862-.34179.12519-.11963.04962-.23462.10772-.35132.1629-.12061.05688-.24219.11047-.36035.17371-.10645.057-.20752.12194-.311.18359-.12134.07214-.24389.141-.36206.22009-.1062.071-.20581.15045-.3081.22638-.10767.07965-.21729.15473-.32178.24048-.14478.119-.28076.248-.417.37671-.05445.05151-.11255.09668-.166.15-.0564.0564-.10425.11786-.15869.17554-.12524.13287-.25122.26532-.36719.40649-.09106.11072-.17114.22718-.25537.34156-.07056.09564-.14477.188-.21094.28686-.085.12659-.15893.25781-.23584.38806-.05566.09443-.11523.18622-.16723.28308-.06909.12916-.12818.26185-.1897.3938-.04932.10547-.10205.20874-.147.31665-.05225.12653-.095.25568-.14063.38428-.042.11817-.08764.2345-.12426.35517-.03907.1289-.06788.25982-.10035.39019-.03051.123-.06518.24414-.09008.36933-.03.15149-.04859.30444-.06983.45715-.01465.1059-.03516.2099-.04565.31714a7.97366,7.97366,0,0,0-.04.79706v47.99487a8,8,0,0,0,16,0V175.59863l20.28418,20.28418a96.11136,96.11136,0,0,0,135.76562,0,8.00052,8.00052,0,0,0-11.31445-11.31445Z\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <polyline\n            points=\"176.167 99.716 224.167 99.716 224.167 51.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <polyline\n            points=\"79.833 156.284 31.833 156.284 31.833 204.284\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <polyline\n            points=\"176.167 99.716 224.167 99.716 224.167 51.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <polyline\n            points=\"79.833 156.284 31.833 156.284 31.833 204.284\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <polyline\n            points=\"176.167 99.716 224.167 99.716 224.167 51.716\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M65.7746,65.7746a88,88,0,0,1,124.4508,0l33.94112,33.94113\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <polyline\n            points=\"79.833 156.284 31.833 156.284 31.833 204.284\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M190.2254,190.2254a88,88,0,0,1-124.4508,0L31.83348,156.28427\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowsClockwise = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nArrowsClockwise.displayName = \"ArrowsClockwise\";\n\nexport default ArrowsClockwise;\n"]},"metadata":{},"sourceType":"module"}