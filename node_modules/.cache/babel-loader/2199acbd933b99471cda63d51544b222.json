{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"60\",\n        height: \"60\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"148\",\n        y: \"48\",\n        width: \"60\",\n        height: \"60\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"148\",\n        width: \"60\",\n        height: \"60\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"148\",\n        y: \"148\",\n        width: \"60\",\n        height: \"60\",\n        strokeWidth: \"24\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        opacity: \"0.2\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"g\", null, React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"40\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"8\"\n      }), React.createElement(\"rect\", {\n        x: \"136\",\n        y: \"40\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"8\"\n      }), React.createElement(\"rect\", {\n        x: \"40\",\n        y: \"136\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"8\"\n      }), React.createElement(\"rect\", {\n        x: \"136\",\n        y: \"136\",\n        width: \"80\",\n        height: \"80\",\n        rx: \"8\"\n      })));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"12\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"8\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"48\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"48\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }), React.createElement(\"rect\", {\n        x: \"144\",\n        y: \"144\",\n        width: \"64\",\n        height: \"64\",\n        strokeWidth: \"16\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        fill: \"none\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar SquaresFour = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nSquaresFour.displayName = \"SquaresFour\";\nexport default SquaresFour;","map":{"version":3,"sources":["../../src/icons/SquaresFour.tsx"],"names":["renderPathFor","x","y","width","height","strokeWidth","stroke","color","strokeLinecap","strokeLinejoin","fill","opacity","rx","console","SquaresFour","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","viewBox","transform","undefined"],"mappings":";;;;AAIA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,MAAA,EAAA,KAAA,EAAA;AAIpB,UAAA,MAAA;AACE,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEC,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAZF,EAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAvBF,EAkCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAlCF,CADF;;AAgDF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMT,QAAAA,CAAC,EAAC,IAAR;AAAaC,QAAAA,CAAC,EAAC,IAAf;AAAoBC,QAAAA,KAAK,EAAC,IAA1B;AAA+BC,QAAAA,MAAM,EAAC,IAAtC;AAA2CO,QAAAA,OAAO,EAAC;AAAnD,OAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMV,QAAAA,CAAC,EAAC,KAAR;AAAcC,QAAAA,CAAC,EAAC,IAAhB;AAAqBC,QAAAA,KAAK,EAAC,IAA3B;AAAgCC,QAAAA,MAAM,EAAC,IAAvC;AAA4CO,QAAAA,OAAO,EAAC;AAApD,OAAA,CAFF,EAGE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMV,QAAAA,CAAC,EAAC,IAAR;AAAaC,QAAAA,CAAC,EAAC,KAAf;AAAqBC,QAAAA,KAAK,EAAC,IAA3B;AAAgCC,QAAAA,MAAM,EAAC,IAAvC;AAA4CO,QAAAA,OAAO,EAAC;AAApD,OAAA,CAHF,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMV,QAAAA,CAAC,EAAC,KAAR;AAAcC,QAAAA,CAAC,EAAC,KAAhB;AAAsBC,QAAAA,KAAK,EAAC,IAA5B;AAAiCC,QAAAA,MAAM,EAAC,IAAxC;AAA6CO,QAAAA,OAAO,EAAC;AAArD,OAAA,CAJF,EAKE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEV,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CALF,EAgBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAhBF,EA2BE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CA3BF,EAsCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAtCF,CADF;;AAoDF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMT,QAAAA,CAAC,EAAC,IAAR;AAAaC,QAAAA,CAAC,EAAC,IAAf;AAAoBC,QAAAA,KAAK,EAAC,IAA1B;AAA+BC,QAAAA,MAAM,EAAC,IAAtC;AAA2CQ,QAAAA,EAAE,EAAC;AAA9C,OAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMX,QAAAA,CAAC,EAAC,KAAR;AAAcC,QAAAA,CAAC,EAAC,IAAhB;AAAqBC,QAAAA,KAAK,EAAC,IAA3B;AAAgCC,QAAAA,MAAM,EAAC,IAAvC;AAA4CQ,QAAAA,EAAE,EAAC;AAA/C,OAAA,CAFF,EAGE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMX,QAAAA,CAAC,EAAC,IAAR;AAAaC,QAAAA,CAAC,EAAC,KAAf;AAAqBC,QAAAA,KAAK,EAAC,IAA3B;AAAgCC,QAAAA,MAAM,EAAC,IAAvC;AAA4CQ,QAAAA,EAAE,EAAC;AAA/C,OAAA,CAHF,EAIE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMX,QAAAA,CAAC,EAAC,KAAR;AAAcC,QAAAA,CAAC,EAAC,KAAhB;AAAsBC,QAAAA,KAAK,EAAC,IAA5B;AAAiCC,QAAAA,MAAM,EAAC,IAAxC;AAA6CQ,QAAAA,EAAE,EAAC;AAAhD,OAAA,CAJF,CADF,CADF;;AAUF,SAAA,OAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACEX,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAZF,EAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAvBF,EAkCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAlCF,CADF;;AAgDF,SAAA,MAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,GALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,GALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAZF,EAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,GALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAvBF,EAkCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,GALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAlCF,CADF;;AAgDF,SAAA,SAAA;AACE,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CADF,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,IAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAZF,EAuBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,IADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAvBF,EAkCE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACET,QAAAA,CAAC,EAAC,KADJ;AAEEC,QAAAA,CAAC,EAAC,KAFJ;AAGEC,QAAAA,KAAK,EAAC,IAHR;AAIEC,QAAAA,MAAM,EAAC,IAJT;AAKEC,QAAAA,WAAW,EAAC,IALd;AAMEC,QAAAA,MAAM,EAAEC,KANV;AAOEC,QAAAA,aAAa,EAAC,OAPhB;AAQEC,QAAAA,cAAc,EAAC,OARjB;AASEC,QAAAA,IAAI,EAAC;AATP,OAAA,CAlCF,CADF;;AAgDF;AACEG,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,gGAAAA;AAGA,aAAA,IAAA;AAzQJ;AAJF,CAAA;;AAiRA,IAAMC,WAAW,GAAA,aAAGC,UAAU,CAA2B,UAAA,KAAA,EAAA,GAAA,EAAA;MAC/CR,KAAAA,GAA0Dc,KAAAA,CAA1Dd,K;MAAOS,IAAAA,GAAmDK,KAAAA,CAAnDL,I;MAAMC,MAAAA,GAA6CI,KAAAA,CAA7CJ,M;MAAQC,QAAAA,GAAqCG,KAAAA,CAArCH,Q;MAAUC,QAAAA,GAA2BE,KAAAA,CAA3BF,Q;MAAaC,SAAAA,GAAAA,6BAAAA,CAAcC,KAAdD,EAAcC,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,EAAAA,UAAAA,CAAdD,C;;oBAOhDO,UAAU,CAAA,WAAA,C;MALLL,YAAAA,GAAAA,WAAAA,CAAPf,K;MACMgB,WAAAA,GAAAA,WAAAA,CAANP,I;MACQQ,aAAAA,GAAAA,WAAAA,CAARP,M;MACUQ,eAAAA,GAAAA,WAAAA,CAAVP,Q;MACGQ,WAAAA,GAAAA,6BAAAA,CAAAA,WAAAA,EAAAA,CAAAA,OAAAA,EAAAA,MAAAA,EAAAA,QAAAA,EAAAA,UAAAA,CAAAA,C;;AAGL,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACEE,IAAAA,GAAG,EAAEA,GADP;AAEEC,IAAAA,KAAK,EAAC,4BAFR;AAGE1B,IAAAA,KAAK,EAAEa,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAHjB;AAIEnB,IAAAA,MAAM,EAAEY,IAAF,IAAA,IAAEA,GAAF,IAAEA,GAAQO,WAJlB;AAKEb,IAAAA,IAAI,EAAEH,KAAF,IAAA,IAAEA,GAAF,KAAEA,GAASe,YALjB;AAMEQ,IAAAA,OAAO,EAAC,aANV;AAOEC,IAAAA,SAAS,EAAEb,QAAQ,IAARA,eAAAA,GAAAA,cAAAA,GAA+Cc;AAP5D,GAAA,EAQMN,WARN,EAAA,SAAA,CAAA,EAAA,QAAA,EAYE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAMvB,IAAAA,KAAK,EAAC,KAAZ;AAAkBC,IAAAA,MAAM,EAAC,KAAzB;AAA+BM,IAAAA,IAAI,EAAC;AAApC,GAAA,CAZF,EAaGV,aAAa,CAACiB,MAAD,IAAA,IAACA,GAAD,MAACA,GAAD,aAAA,EAA0BV,KAA1B,IAAA,IAA0BA,GAA1B,KAA0BA,GAd5C,YAckB,CAbhB,CADF;AAVF,CAA8B,CAA9B;AA6BAO,WAAW,CAAXA,WAAAA,GAAAA,aAAAA","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"148\"\n            y=\"48\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"148\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"148\"\n            y=\"148\"\n            width=\"60\"\n            height=\"60\"\n            strokeWidth=\"24\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <rect x=\"48\" y=\"48\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"144\" y=\"48\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"48\" y=\"144\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect x=\"144\" y=\"144\" width=\"64\" height=\"64\" opacity=\"0.2\" />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <g>\n            <rect x=\"40\" y=\"40\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"136\" y=\"40\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"40\" y=\"136\" width=\"80\" height=\"80\" rx=\"8\" />\n            <rect x=\"136\" y=\"136\" width=\"80\" height=\"80\" rx=\"8\" />\n          </g>\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"12\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"8\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <rect\n            x=\"48\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"48\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"48\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n          <rect\n            x=\"144\"\n            y=\"144\"\n            width=\"64\"\n            height=\"64\"\n            strokeWidth=\"16\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            fill=\"none\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst SquaresFour = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nSquaresFour.displayName = \"SquaresFour\";\n\nexport default SquaresFour;\n"]},"metadata":{},"sourceType":"module"}