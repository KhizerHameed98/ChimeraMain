{"ast":null,"code":"import React, { forwardRef, useContext } from 'react';\nimport { IconContext } from '../lib/index.esm.js';\nimport { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nvar renderPathFor = function renderPathFor(weight, color) {\n  switch (weight) {\n    case \"bold\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"80 120 32 168 80 216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }), React.createElement(\"path\", {\n        d: \"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"24\"\n      }));\n\n    case \"duotone\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"80 120 32 168 80 216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    case \"fill\":\n      return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n        d: \"M168,48H80a8,8,0,0,0,0,16h88a48,48,0,0,1,0,96H51.31348l34.34375-34.34326a8.00018,8.00018,0,0,0-11.31446-11.31348l-48,48c-.02392.02393-.04394.05078-.06762.07471-.15967.16406-.31495.332-.46021.50928-.08423.10254-.15771.21045-.23608.31591-.07715.10352-.15747.20459-.22949.312-.082.12255-.15333.24951-.22779.375-.05859.09863-.12036.19433-.17456.29541-.06811.12695-.12573.25732-.18652.38671-.0503.10743-.10425.2129-.1499.32325-.052.12549-.094.25341-.13941.38086-.04248.11914-.08838.23632-.12524.35791-.03882.12841-.06763.25927-.09986.38916-.03076.123-.06567.24511-.09057.3706-.03.15088-.04859.30371-.06958.45654-.0149.106-.0354.21-.0459.31739a8.02276,8.02276,0,0,0,0,1.584c.0105.10742.031.21143.0459.31738.021.15284.03955.30567.06958.45655.0249.12549.05981.24756.09057.3706.03223.12989.061.26075.09986.38916.03686.12159.08276.23877.12524.35791.04541.12745.0874.25537.13941.38086.04565.11035.0996.21582.1499.32325.06079.12939.11841.25976.18652.38671.0542.10108.116.19678.17456.29541.07446.12549.14575.25245.22779.375.072.10743.15234.2085.22949.312.07837.10546.15185.21337.23608.31591.14258.17383.29517.33887.45166.49952.02661.02734.04907.05761.07617.08447l48,48a8.00018,8.00018,0,1,0,11.31446-11.31348L51.31348,176H168a64,64,0,0,0,0-128Z\"\n      }));\n\n    case \"light\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"80 120 32 168 80 216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }), React.createElement(\"path\", {\n        d: \"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"12\"\n      }));\n\n    case \"thin\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"80 120 32 168 80 216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }), React.createElement(\"path\", {\n        d: \"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"8\"\n      }));\n\n    case \"regular\":\n      return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n        points: \"80 120 32 168 80 216\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }), React.createElement(\"path\", {\n        d: \"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\",\n        fill: \"none\",\n        stroke: color,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"16\"\n      }));\n\n    default:\n      console.error('Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".');\n      return null;\n  }\n};\n\nvar ArrowUDownLeft = /*#__PURE__*/forwardRef(function (props, ref) {\n  var color = props.color,\n      size = props.size,\n      weight = props.weight,\n      mirrored = props.mirrored,\n      children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"color\", \"size\", \"weight\", \"mirrored\", \"children\"]);\n\n  var _useContext = useContext(IconContext),\n      contextColor = _useContext.color,\n      contextSize = _useContext.size,\n      contextWeight = _useContext.weight,\n      contextMirrored = _useContext.mirrored,\n      restContext = _objectWithoutPropertiesLoose(_useContext, [\"color\", \"size\", \"weight\", \"mirrored\"]);\n\n  return React.createElement(\"svg\", Object.assign({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size != null ? size : contextSize,\n    height: size != null ? size : contextSize,\n    fill: color != null ? color : contextColor,\n    viewBox: \"0 0 256 256\",\n    transform: mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined\n  }, restContext, restProps), children, React.createElement(\"rect\", {\n    width: \"256\",\n    height: \"256\",\n    fill: \"none\"\n  }), renderPathFor(weight != null ? weight : contextWeight, color != null ? color : contextColor));\n});\nArrowUDownLeft.displayName = \"ArrowUDownLeft\";\nexport default ArrowUDownLeft;","map":{"version":3,"sources":["../../src/icons/ArrowUDownLeft.tsx"],"names":["renderPathFor","points","fill","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","d","console","ArrowUDownLeft","forwardRef","size","weight","mirrored","children","restProps","props","contextColor","contextSize","contextWeight","contextMirrored","restContext","useContext","ref","xmlns","width","height","viewBox","transform","undefined"],"mappings":"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","sourcesContent":["/* GENERATED FILE */\nimport React, { forwardRef, useContext } from \"react\";\nimport { IconProps, IconContext } from \"../lib\";\n\nconst renderPathFor = (\n  weight: string,\n  color: string\n): React.ReactNode | null => {\n  switch (weight) {\n    case \"bold\":\n      return (\n        <>\n          <polyline\n            points=\"80 120 32 168 80 216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n          <path\n            d=\"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          />\n        </>\n      );\n    case \"duotone\":\n      return (\n        <>\n          <polyline\n            points=\"80 120 32 168 80 216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    case \"fill\":\n      return (\n        <>\n          <path d=\"M168,48H80a8,8,0,0,0,0,16h88a48,48,0,0,1,0,96H51.31348l34.34375-34.34326a8.00018,8.00018,0,0,0-11.31446-11.31348l-48,48c-.02392.02393-.04394.05078-.06762.07471-.15967.16406-.31495.332-.46021.50928-.08423.10254-.15771.21045-.23608.31591-.07715.10352-.15747.20459-.22949.312-.082.12255-.15333.24951-.22779.375-.05859.09863-.12036.19433-.17456.29541-.06811.12695-.12573.25732-.18652.38671-.0503.10743-.10425.2129-.1499.32325-.052.12549-.094.25341-.13941.38086-.04248.11914-.08838.23632-.12524.35791-.03882.12841-.06763.25927-.09986.38916-.03076.123-.06567.24511-.09057.3706-.03.15088-.04859.30371-.06958.45654-.0149.106-.0354.21-.0459.31739a8.02276,8.02276,0,0,0,0,1.584c.0105.10742.031.21143.0459.31738.021.15284.03955.30567.06958.45655.0249.12549.05981.24756.09057.3706.03223.12989.061.26075.09986.38916.03686.12159.08276.23877.12524.35791.04541.12745.0874.25537.13941.38086.04565.11035.0996.21582.1499.32325.06079.12939.11841.25976.18652.38671.0542.10108.116.19678.17456.29541.07446.12549.14575.25245.22779.375.072.10743.15234.2085.22949.312.07837.10546.15185.21337.23608.31591.14258.17383.29517.33887.45166.49952.02661.02734.04907.05761.07617.08447l48,48a8.00018,8.00018,0,1,0,11.31446-11.31348L51.31348,176H168a64,64,0,0,0,0-128Z\" />\n        </>\n      );\n    case \"light\":\n      return (\n        <>\n          <polyline\n            points=\"80 120 32 168 80 216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n          <path\n            d=\"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"12\"\n          />\n        </>\n      );\n    case \"thin\":\n      return (\n        <>\n          <polyline\n            points=\"80 120 32 168 80 216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n          <path\n            d=\"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"8\"\n          />\n        </>\n      );\n    case \"regular\":\n      return (\n        <>\n          <polyline\n            points=\"80 120 32 168 80 216\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n          <path\n            d=\"M80,56h88a56,56,0,0,1,56,56v.00011A55.99988,55.99988,0,0,1,168.00011,168H32\"\n            fill=\"none\"\n            stroke={color}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"16\"\n          />\n        </>\n      );\n    default:\n      console.error(\n        'Unsupported icon weight. Choose from \"thin\", \"light\", \"regular\", \"bold\", \"fill\", or \"duotone\".'\n      );\n      return null;\n  }\n};\n\nconst ArrowUDownLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => {\n  const { color, size, weight, mirrored, children, ...restProps } = props;\n  const {\n    color: contextColor,\n    size: contextSize,\n    weight: contextWeight,\n    mirrored: contextMirrored,\n    ...restContext\n  } = useContext(IconContext);\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size ?? contextSize}\n      height={size ?? contextSize}\n      fill={color ?? contextColor}\n      viewBox=\"0 0 256 256\"\n      transform={mirrored || contextMirrored ? \"scale(-1, 1)\" : undefined}\n      {...restContext}\n      {...restProps}\n    >\n      {children}\n      <rect width=\"256\" height=\"256\" fill=\"none\" />\n      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}\n    </svg>\n  );\n});\n\nArrowUDownLeft.displayName = \"ArrowUDownLeft\";\n\nexport default ArrowUDownLeft;\n"]},"metadata":{},"sourceType":"module"}